{"version":3,"sources":["utils/generalUtils.js","components/atoms/LogoutButton/LogoutButton.js","components/Header/Header.js","components/atoms/alerts/BarAlert.js","components/MainContainer/MainContainer.js","components/Dashboard/Dashboard.js","components/Listings/TestsListing.js","components/atoms/inputs/InputSlider.js","components/atoms/inputs/DatePicker.js","components/atoms/buttons/FormButton.js","components/atoms/buttons/ToggleFormButton.js","components/atoms/buttons/CloseWindowButton.js","utils/tokenUtils.js","components/Forms/styles/barFormStyle.js","components/Forms/AddTestForm.js","components/Pages/Tank.js","components/Forms/styles/formDefaultStyle.js","components/Forms/RegisterForm.js","components/Forms/LoginForm.js","components/Pages/Login.js","components/Forms/AddTankForm.js","components/atoms/cards/TankCard.js","components/Listings/TanksListing.js","components/Pages/TanksHome.js","components/Pages/UserProfile.js","components/Pages/About.js","App.js","index.js"],"names":["pipe","fns","x","reduce","v","f","setCookie","label","data","console","log","document","cookie","error","getCookie","cookieValue","indexOf","split","filter","row","startsWith","buttonStyle","css","LogoutButton","btnText","setIsUserLoggedIn","setTokenState","className","onClick","headerStyle","linkStyle","toggleBtnStyle","Header","useState","isNavToggled","setIsNavToggled","navbarStyle","src","to","alertStyle","alertType","backgroundColor","color","closeBtnStyle","BarAlert","alertText","event","target","parentNode","style","display","mainContainerStyle","MainContainer","children","dashboardStyle","Dashboard","tableWrapper","tableStyle","TestsListing","testsState","map","test","key","_id","dateOfTest","nh3","nh4","no3","ph","tempCelc","inputWrapperStyle","inputStyle","InputSlider","id","type","name","labelText","value","onChange","labelStyle","placeholder","htmlFor","DatePicker","onChangeHandler","FormButton","autoFocus","ReactGa","category","action","window","location","pathname","search","alert","formToggleStyle","ToggleFormButton","buttonText","onClickHandler","CloseWindowButton","alt","getAuthHeader","tokenState","getUserToken","formatBearerToken","formatAuthorizationHeader","bearerToken","Authorization","userToken","formWrapper","barFormStyle","isFormToggled","AddTestForm","tankID","setTestsState","formState","setFormState","isMobileFormToggled","setIsMobileFormToggled","toggleMobileFormHandler","preventDefault","onSubmitHandler","a","authHeader","axios","post","headers","checked","onSubmit","Tank","isUserLoggedIn","match","params","tankState","setTankState","populateTankAndTestsInformation","get","tank","tests","useEffect","formDefaultStyle","RegisterForm","email","password","surname","age","then","res","token","LoginForm","Login","AddTankForm","setTanksListingState","tanksListingState","sizeX","sizeY","sizeZ","aquariumType","catch","tankCardStyle","TankCard","tankData","tanksListingStyle","TanksListing","TanksHome","populateTanksListing","UserProfile","userAccountInfo","date","About","globalStyles","App","setUserAccountInfo","loginOnMount","initialize","pageview","styles","path","exact","render","props","exec","component","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.318cd3c2.chunk.js","sourcesContent":["const pipe = (...fns) => (x) => fns.reduce((v, f) => f(v), x);\r\n\r\nconst setCookie = (label, data) => {\r\n  try {\r\n    console.log(\"label:\", label, \"data\", data);\r\n    document.cookie = `${label}=${data}`;\r\n  } catch (error) {\r\n    console.log(\"Error setting cookies\");\r\n  }\r\n};\r\n\r\nconst deleteFromCookie = (label) => {\r\n  document.cookie = `${label}= ; expires = Thu, 01 Jan 1970 00:00:00 GMT`;\r\n};\r\n\r\nconst getCookie = (label) => {\r\n  let cookieValue = null;\r\n  try {\r\n    if (document.cookie.indexOf(label !== 0)) {\r\n      cookieValue = document.cookie\r\n        .split(\";\")\r\n        .filter((row) => row.startsWith(label))[0]\r\n        .split(\"=\")[1];\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n\r\n  console.log(cookieValue);\r\n  return cookieValue;\r\n};\r\n\r\nexport { pipe, setCookie, deleteFromCookie, getCookie };\r\n","import React from \"react\";\r\nimport { deleteFromCookie } from \"../../../utils/generalUtils\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n\r\n/**@jsx jsx */\r\n\r\nconst buttonStyle = css`\r\n  background-color: rgba(0, 0, 0, 0);\r\n  border: 1px solid #7e84cc;\r\n  padding: 0.8rem 4rem;\r\n  border-radius: 16px;\r\n  color: #7e84cc;\r\n  cursor: pointer;\r\n  margin-left: auto;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nconst LogoutButton = ({ btnText, setIsUserLoggedIn, setTokenState }) => {\r\n  const onClickHandler = () => {\r\n    deleteFromCookie(\"token\");\r\n    setIsUserLoggedIn(false);\r\n    setTokenState(null);\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className=\"logout-button\"\r\n      css={buttonStyle}\r\n      onClick={onClickHandler}\r\n    >\r\n      {btnText}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LogoutButton;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n// Componets\r\nimport LogoutButton from \"../atoms/LogoutButton/LogoutButton\";\r\n\r\n/**@jsx jsx */\r\n\r\nconst headerStyle = css`\r\n  margin-top: 4rem;\r\n  margin-bottom: 4rem;\r\n  @media screen and (max-width: 768px) {\r\n    margin-top: 0;\r\n  }\r\n`;\r\n\r\nconst linkStyle = css`\r\n  font-weight: 700;\r\n  color: #7e84cc;\r\n  text-decoration: none;\r\n  padding: 2rem;\r\n  padding-bottom: 1.5rem;\r\n  display: block;\r\n  border-bottom: 5px solid #fff;\r\n  transition: all ease-in 0.3s;\r\n  &:hover {\r\n    border-bottom-color: #b0b3df;\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: inline-block;\r\n  }\r\n`;\r\n\r\nconst toggleBtnStyle = css`\r\n  position: absolute;\r\n  top: 2rem;\r\n  right: 4rem;\r\n  height: 5rem;\r\n  width: 5rem;\r\n  font-size: 0;\r\n  color: rgba(0, 0, 0, 0);\r\n  display: none;\r\n  border-radius: 16px;\r\n  border: 1px solid #000;\r\n  background-color: #fff;\r\n  &:after {\r\n    position: absolute;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst Header = ({ setIsUserLoggedIn, setTokenState }) => {\r\n  const [isNavToggled, setIsNavToggled] = useState(false);\r\n  const onToggleHandler = () => {\r\n    setIsNavToggled(!isNavToggled);\r\n    console.log(isNavToggled);\r\n  };\r\n\r\n  const navbarStyle = css`\r\n    background-color: #fff;\r\n    max-width: 1170px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    border-radius: 16px;\r\n    padding: 0 2rem;\r\n\r\n    @media screen and (max-width: 768px) {\r\n      padding-top: 8rem;\r\n      /* background-color: rgba(0,0,0,0); */\r\n      background-color: ${isNavToggled ? \"#ffffff\" : \"rgba(0,0,0,0);\"};\r\n    }\r\n\r\n    & > ul {\r\n      list-style: none;\r\n      display: flex;\r\n      & > li:last-of-type {\r\n        margin-left: auto;\r\n      }\r\n      @media screen and (max-width: 768px) {\r\n        display: ${isNavToggled ? \"flex\" : \"none\"};\r\n        flex-direction: column;\r\n        padding: 2rem;\r\n        justify-content: right;\r\n\r\n        & > li {\r\n          display: inline-block;\r\n          text-align: right;\r\n        }\r\n      }\r\n    }\r\n\r\n    & .logout-button {\r\n      margin-top: 1.3rem;\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <header css={headerStyle}>\r\n      <nav css={navbarStyle}>\r\n        <button onClick={onToggleHandler} css={toggleBtnStyle}>\r\n          <img src=\"navbar/icons8-menu.svg\" />\r\n        </button>\r\n        <ul>\r\n          <li>\r\n            <Link css={linkStyle} to={\"/\"}>\r\n              home\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link css={linkStyle} to={\"/tanks\"}>\r\n              my tanks\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link css={linkStyle} to={\"/me\"}>\r\n              my profile\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <LogoutButton\r\n              btnText={\"Logout\"}\r\n              setIsUserLoggedIn={setIsUserLoggedIn}\r\n              setTokenState={setTokenState}\r\n            />\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { jsx, css } from \"@emotion/core\";\r\n/**@jsx jsx */\r\n\r\nconst alertStyle = (alertType) => {\r\n  let backgroundColor = \"\";\r\n  let color = \"\";\r\n\r\n  switch (alertType) {\r\n    case \"danger\":\r\n      backgroundColor = \"#f45356\";\r\n      color = \"#f9d6d4\";\r\n      break;\r\n    case \"success\":\r\n      backgroundColor = \"#44cb9a\";\r\n      color = \"#ddf8f4\";\r\n      break;\r\n    case \"warning\":\r\n      backgroundColor = \"#f9d687\";\r\n      color = \"#62543a\";\r\n      break;\r\n    default:\r\n      backgroundColor = \"#5fc1dd\";\r\n      color = \"#ddf4f9\";\r\n  }\r\n  return css`\r\n    background-color: ${backgroundColor};\r\n    max-width: 1170px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    padding: 1.6rem 4rem;\r\n    color: ${color};\r\n    border-radius: 4px;\r\n    position: relative;\r\n    margin-bottom: 2rem;\r\n    box-shadow: -1px 1px 21px 10px rgba(240, 243, 248, 1);\r\n  `;\r\n};\r\n\r\nconst closeBtnStyle = css`\r\n  position: absolute;\r\n  right: 2rem;\r\n  top: 50%;\r\n  transform: translate(0, -50%);\r\n  padding: 0;\r\n  background-color: rgba(0, 0, 0, 0);\r\n  color: #fff;\r\n  margin: 0;\r\n  border: none;\r\n  cursor: pointer;\r\n  display: block;\r\n`;\r\n\r\nconst BarAlert = ({ alertText, alertType }) => {\r\n  const closeBtnClickHandler = (event) => {\r\n    event.target.parentNode.style.display = \"none\";\r\n  };\r\n  return (\r\n    <div css={alertStyle(alertType)}>\r\n      {alertText}{\" \"}\r\n      <span onClick={closeBtnClickHandler} css={closeBtnStyle}>\r\n        X\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarAlert;\r\n","import React, { Fragment } from \"react\";\r\nimport { css, jsx } from \"@emotion/core\";\r\nimport Header from \"../Header/Header\";\r\nimport BarAlert from \"../atoms/alerts/BarAlert\";\r\n\r\n/** @jsx jsx */\r\nconst mainContainerStyle = css`\r\n  max-width: 1170px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nconst MainContainer = ({ setIsUserLoggedIn, children, setTokenState }) => {\r\n  return (\r\n    <Fragment>\r\n      <Header\r\n        setIsUserLoggedIn={setIsUserLoggedIn}\r\n        setTokenState={setTokenState}\r\n      />\r\n      <BarAlert\r\n        alertText={\"Danger: something went wrong!\"}\r\n        alertType={\"danger\"}\r\n      />\r\n      <main css={mainContainerStyle}>{children}</main>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MainContainer;\r\n","import React from \"react\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n\r\n/** @jsx jsx */\r\n\r\nconst dashboardStyle = css`\r\n  padding: 4rem 4rem;\r\n  background-color: #ffffff;\r\n  border-radius: 16px;\r\n`;\r\n\r\nconst Dashboard = ({ children }) => {\r\n  return <section css={dashboardStyle}>{children}</section>;\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n\r\n/** @jsx jsx */\r\n\r\nconst tableWrapper = css`\r\n  overflow-y: scroll;\r\n`;\r\nconst tableStyle = css`\r\n  /* display: block; */\r\n  font-size: 1.6rem;\r\n  text-align: left;\r\n  background-color: #fff;\r\n  /* padding: 2rem 4rem; */\r\n  border-collapse: collapse;\r\n  /* border-radius: 16px; */\r\n\r\n  & thead tr {\r\n    font-weight: 700;\r\n    color: #7e84cc;\r\n    border-bottom: 1px solid #b4b8e1;\r\n  }\r\n\r\n  th,\r\n  td {\r\n    padding: 1.6rem;\r\n    /* &:first-of-type {\r\n      padding: 0.8rem 0.8rem 0.8rem 0;\r\n    } */\r\n    &:nth-of-type(2n + 1) {\r\n      background-color: #f8f8fc;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TestsListing = ({ testsState }) => {\r\n  return (\r\n    <section css={tableWrapper}>\r\n      <table css={tableStyle}>\r\n        <thead>\r\n          <tr>\r\n            <th>Date of test</th>\r\n            <th>NH3</th>\r\n            <th>NH4</th>\r\n            <th>NO3</th>\r\n            <th>PH</th>\r\n            <th>temperature (celc)</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {testsState.map((test) => (\r\n            <tr key={test._id}>\r\n              <td>{test.dateOfTest}</td>\r\n              <td>{test.nh3}</td>\r\n              <td>{test.nh4}</td>\r\n              <td>{test.no3}</td>\r\n              <td>{test.ph}</td>\r\n              <td>{test.tempCelc}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TestsListing;\r\n","import React from \"react\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n/** @jsx jsx */\r\n\r\nconst inputWrapperStyle = css`\r\n  width: 100%;\r\n  position: relative;\r\n  display: block;\r\n`;\r\n\r\nconst inputStyle = css`\r\n  width: 100%;\r\n  padding: 0.8rem;\r\n  border: none;\r\n  border-bottom: 1px solid #92a2ae;\r\n  outline: none;\r\n  display: block;\r\n  &:focus {\r\n    border-bottom: 1px solid #5a95e6;\r\n  }\r\n`;\r\n\r\nconst InputSlider = ({ id, type, name, labelText, value, onChange }) => {\r\n  const labelStyle = css`\r\n    position: absolute;\r\n    left: 0.8rem;\r\n    top: 50%;\r\n    font-size: 1.6rem;\r\n    color: #92a2ae;\r\n    transform: translate(-10%, -170%) scale(0.8);\r\n\r\n    input:placeholder-shown + & {\r\n      transform: translate(0, -50%);\r\n    }\r\n    transition: all ease-in 0.3s;\r\n    pointer-events: none;\r\n  `;\r\n  return (\r\n    <div className=\"input-slider-wrapper\" css={inputWrapperStyle}>\r\n      <input\r\n        onChange={onChange}\r\n        css={inputStyle}\r\n        id={id}\r\n        type={type}\r\n        name={name}\r\n        value={value}\r\n        placeholder=\" \"\r\n      />\r\n      <label css={labelStyle} htmlFor={id}>\r\n        {labelText}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputSlider;\r\n","import React from \"react\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n\r\n/** @jsx jsx */\r\nconst inputWrapperStyle = css`\r\n  min-width: 18rem;\r\n  position: relative;\r\n\r\n  & > label {\r\n    position: absolute;\r\n    left: 0.8rem;\r\n    top: 50%;\r\n    font-size: 1.6rem;\r\n    /* transform: translate(0, -50%); */\r\n    transform: translate(-16%, -170%) scale(0.8);\r\n    pointer-events: none;\r\n    color: #92a2ae;\r\n  }\r\n\r\n  & > input {\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    border: none;\r\n    border-bottom: 1px solid #92a2ae;\r\n    outline: none;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst DatePicker = ({ id, name, labelText, value, onChangeHandler }) => {\r\n  return (\r\n    <div\r\n      className=\"input-slider-wrapper--date\"\r\n      css={inputWrapperStyle}\r\n      className=\"inputWrapper\"\r\n    >\r\n      <input\r\n        id={id}\r\n        type=\"date\"\r\n        name={name}\r\n        onChange={onChangeHandler}\r\n        value={value}\r\n      />\r\n      <label htmlFor={id}>{labelText}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DatePicker;\r\n","import React from \"react\";\r\nimport { css, jsx } from \"@emotion/core\";\r\nimport ReactGa from \"react-ga\";\r\n\r\n/** @jsx jsx */\r\nconst buttonStyle = css`\r\n  background-color: #9da7b4;\r\n  border: none;\r\n  padding: 0.8rem;\r\n  border-radius: 2px;\r\n  cursor: pointer;\r\n  text-transform: uppercase;\r\n  color: #ffffff;\r\n  display: block;\r\n  width: 100%;\r\n`;\r\n\r\nconst FormButton = ({ btnText, autoFocus }) => {\r\n  const googleAnalyticsHandler = () => {\r\n    ReactGa.event({\r\n      category: \"Button\",\r\n      action: `Click button ${btnText} from ${\r\n        window.location.pathname + window.location.search\r\n      }`,\r\n    });\r\n    alert(\"send to GA\");\r\n  };\r\n  return (\r\n    <button\r\n      onClick={googleAnalyticsHandler}\r\n      autoFocus={autoFocus}\r\n      css={buttonStyle}\r\n    >\r\n      {btnText}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default FormButton;\r\n","import React from \"react\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n\r\n/**@jsx jsx */\r\n\r\nconst formToggleStyle = css`\r\n  background-color: #3fbe90;\r\n  border: none;\r\n  padding: 0.8rem;\r\n  border-radius: 2px;\r\n  cursor: pointer;\r\n  text-transform: uppercase;\r\n  color: #ffffff;\r\n  display: block;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst ToggleFormButton = ({ buttonText, onClickHandler }) => {\r\n  return (\r\n    <button onClick={onClickHandler} css={formToggleStyle}>\r\n      {buttonText}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ToggleFormButton;\r\n","import React from \"react\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n\r\n/** @jsx jsx */\r\n\r\nconst buttonStyle = css`\r\n  width: 2rem;\r\n  height: 2rem;\r\n  padding: 0;\r\n  border: none;\r\n  cursor: pointer;\r\n  background-color: #fff;\r\n  & > img {\r\n    width: 100%;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst CloseWindowButton = ({ onClickHandler }) => {\r\n  return (\r\n    <button\r\n      onClick={onClickHandler}\r\n      className=\"close-window-btn\"\r\n      css={buttonStyle}\r\n    >\r\n      <img src=\"/close-x.png\" alt=\"close\" />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default CloseWindowButton;\r\n","import { pipe, getCookie } from \"./generalUtils\";\r\n\r\nconst getAuthHeader = (tokenState) => {\r\n  return pipe(\r\n    getUserToken,\r\n    formatBearerToken,\r\n    formatAuthorizationHeader\r\n  )(tokenState);\r\n};\r\n\r\nconst formatAuthorizationHeader = (bearerToken) => {\r\n  if (!bearerToken) {\r\n    return null;\r\n  }\r\n  return {\r\n    Authorization: bearerToken,\r\n  };\r\n};\r\n\r\nconst formatBearerToken = (userToken) => {\r\n  if (!userToken) {\r\n    return null;\r\n  }\r\n  const bearerToken = `Bearer ${userToken}`;\r\n  return bearerToken;\r\n};\r\n\r\nconst getUserToken = (tokenState) => {\r\n  let userToken = null;\r\n\r\n  if (tokenState) {\r\n    userToken = tokenState;\r\n  } else if (document.cookie.indexOf(\"token\") !== -1) {\r\n    try {\r\n      console.log(\"user token:\", getCookie(\"token\"));\r\n      userToken = getCookie(\"token\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  return userToken;\r\n};\r\n\r\nexport {\r\n  getAuthHeader,\r\n  formatAuthorizationHeader,\r\n  formatBearerToken,\r\n  getUserToken,\r\n};\r\n","import { css, jsx } from \"@emotion/core\";\r\n\r\nconst formWrapper = css`\r\n  @media screen and (max-width: 768px) {\r\n    padding: 1.6rem 0;\r\n  }\r\n`;\r\n\r\nconst barFormStyle = (isFormToggled) => css`\r\n  background-color: #fff;\r\n  /* padding: 2rem 4rem; */\r\n  /* border-radius: 16px 16px 0 0; */\r\n  display: flex;\r\n  margin-bottom: 4rem;\r\n  & > .inputWrapper {\r\n    margin-right: 1.6rem;\r\n  }\r\n\r\n  & > .input-slider-wrapper {\r\n    margin-right: 1.6rem;\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    position: absolute;\r\n    background-color: #fff;\r\n    display: ${isFormToggled ? \"block\" : \"none\"};\r\n    padding: 4rem;\r\n    border-radius: 16px;\r\n    box-shadow: -1px 1px 21px 10px rgba(240, 243, 248, 1);\r\n    left: 16px;\r\n    width: calc(100vw - 32px);\r\n    & > .input-slider-wrapper {\r\n      margin-bottom: 2rem;\r\n    }\r\n    & > .close-window-btn {\r\n      position: absolute;\r\n      top: 2rem;\r\n      right: 2rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport { barFormStyle, formWrapper };\r\n","// Libs\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n// Components\r\nimport InputSlider from \"../atoms/inputs/InputSlider\";\r\nimport DatePicker from \"../atoms/inputs/DatePicker\";\r\nimport FormButton from \"../atoms/buttons/FormButton\";\r\nimport ToggleFormButton from \"../atoms/buttons/ToggleFormButton\";\r\nimport CloseWindowButton from \"../atoms/buttons/CloseWindowButton\";\r\n// Utils\r\nimport { getAuthHeader } from \"../../utils/tokenUtils\";\r\n// Styles\r\nimport { barFormStyle, formWrapper } from \"./styles/barFormStyle\";\r\n\r\n/**@jsx jsx */\r\n\r\nconst AddTestForm = ({ tokenState, tankID, setTestsState, testsState }) => {\r\n  const initialState = {\r\n    dateOfTest: \"\",\r\n    nh3: \"\",\r\n    nh4: \"\",\r\n    no3: \"\",\r\n    ph: \"\",\r\n    tempCelc: \"\",\r\n  };\r\n  const [formState, setFormState] = useState(initialState);\r\n  const [isMobileFormToggled, setIsMobileFormToggled] = useState(false);\r\n\r\n  const toggleMobileFormHandler = (event) => {\r\n    event.preventDefault();\r\n    setIsMobileFormToggled(!isMobileFormToggled);\r\n    console.log(isMobileFormToggled);\r\n  };\r\n\r\n  const onSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    const authHeader = getAuthHeader(tokenState);\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"/tests\",\r\n        { ...formState, tankID },\r\n        { headers: authHeader }\r\n      );\r\n      setTestsState([...testsState, data]);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const onChangeHandler = (event) => {\r\n    const value =\r\n      event.target.type === \"checkbox\"\r\n        ? event.target.checked\r\n        : event.target.value;\r\n    setFormState({ ...formState, [event.target.name]: value });\r\n  };\r\n\r\n  return (\r\n    <section css={formWrapper}>\r\n      <ToggleFormButton\r\n        buttonText=\"New test\"\r\n        onClickHandler={toggleMobileFormHandler}\r\n      />\r\n      <form css={barFormStyle(isMobileFormToggled)} onSubmit={onSubmitHandler}>\r\n        <CloseWindowButton onClickHandler={toggleMobileFormHandler} />\r\n        <DatePicker\r\n          id={\"testDate\"}\r\n          name={\"dateOfTest\"}\r\n          labelText={\"date of testing\"}\r\n          value={formState.dateOfTest}\r\n          onChangeHandler={onChangeHandler}\r\n        />\r\n        <InputSlider\r\n          id={\"testNH3\"}\r\n          type={\"number\"}\r\n          name={\"nh3\"}\r\n          labelText={\"NH3\"}\r\n          value={formState.nh3}\r\n          onChange={onChangeHandler}\r\n        />\r\n        <InputSlider\r\n          id={\"testNH4\"}\r\n          type={\"number\"}\r\n          name={\"nh4\"}\r\n          labelText={\"NH4\"}\r\n          value={formState.nh4}\r\n          onChange={onChangeHandler}\r\n        />\r\n        <InputSlider\r\n          id={\"testNO3\"}\r\n          type={\"number\"}\r\n          name={\"no3\"}\r\n          labelText={\"NO3\"}\r\n          value={formState.no3}\r\n          onChange={onChangeHandler}\r\n        />\r\n        <InputSlider\r\n          id={\"testPH\"}\r\n          type={\"number\"}\r\n          name={\"ph\"}\r\n          labelText={\"PH\"}\r\n          value={formState.ph}\r\n          onChange={onChangeHandler}\r\n        />\r\n        <InputSlider\r\n          id={\"tempCelc\"}\r\n          type={\"number\"}\r\n          name={\"tempCelc\"}\r\n          labelText={\"temperature C\"}\r\n          value={formState.tempCelc}\r\n          onChange={onChangeHandler}\r\n        />\r\n        <FormButton btnText={\"add test\"} />\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AddTestForm;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\n// Components\r\nimport Dashboard from \"../Dashboard/Dashboard\";\r\nimport TestsListing from \"../Listings/TestsListing\";\r\nimport AddTestForm from \"../Forms/AddTestForm\";\r\n// Utils\r\nimport { getAuthHeader } from \"../../utils/tokenUtils\";\r\n\r\nconst Tank = ({ isUserLoggedIn, tokenState, match }) => {\r\n  console.log(isUserLoggedIn, tokenState, match);\r\n  console.log(isUserLoggedIn);\r\n  const {\r\n    params: { tankID },\r\n  } = match;\r\n  const [tankState, setTankState] = useState([]);\r\n  const [testsState, setTestsState] = useState([]);\r\n\r\n  const populateTankAndTestsInformation = async (tokenState, tankID) => {\r\n    const authHeader = getAuthHeader(tokenState);\r\n    const {\r\n      data: { tank, tests },\r\n    } = await axios.get(`/tanks/${tankID}`, { headers: authHeader });\r\n    console.log(tests);\r\n    setTankState(tank);\r\n    setTestsState(tests);\r\n  };\r\n\r\n  useEffect(() => {\r\n    populateTankAndTestsInformation(tokenState, tankID);\r\n  }, [tokenState, tankID]);\r\n\r\n  if (isUserLoggedIn) {\r\n    return (\r\n      <Dashboard>\r\n        <h2>{tankState.name}</h2>\r\n        <AddTestForm\r\n          tankID={tankID}\r\n          tokenState={tokenState}\r\n          testsState={testsState}\r\n          setTestsState={setTestsState}\r\n        />\r\n        <TestsListing testsState={testsState} />\r\n      </Dashboard>\r\n    );\r\n  } else {\r\n    return <Redirect to={\"/\"} />;\r\n  }\r\n};\r\n\r\nexport default Tank;\r\n","import { css, jsx } from \"@emotion/core\";\r\nconst formDefaultStyle = css`\r\n  background-color: #fff;\r\n  padding: 4rem;\r\n  border-radius: 16px;\r\n  max-width: 58.5rem;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n\r\n  & > .input-slider-wrapper {\r\n    margin-bottom: 1.6rem;\r\n  }\r\n`;\r\n\r\nexport default formDefaultStyle;\r\n","// Libs\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n// Components\r\nimport InputSlider from \"../atoms/inputs/InputSlider\";\r\nimport FormButton from \"../atoms/buttons/FormButton\";\r\n// Utils\r\nimport { setCookie } from \"../../utils/generalUtils\";\r\n// Styles\r\nimport formDefaultStyle from \"./styles/formDefaultStyle\";\r\n\r\n/** @jsx jsx */\r\n\r\nconst RegisterForm = ({ setIsUserLoggedIn, setTokenState }) => {\r\n  const initialState = {\r\n    email: \"\",\r\n    password: \"\",\r\n    name: \"\",\r\n    surname: \"\",\r\n    age: \"\",\r\n  };\r\n  const [formState, setFormState] = useState(initialState);\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    axios.post(\"/users\", formState).then((res) => {\r\n      const {\r\n        data: { token },\r\n      } = res;\r\n      setIsUserLoggedIn(true);\r\n      setTokenState(token);\r\n      setCookie(\"token\", token);\r\n    });\r\n  };\r\n  const onChangeHandler = (event) => {\r\n    const value =\r\n      event.target.type === \"checkbox\"\r\n        ? event.target.checked\r\n        : event.target.value;\r\n    setFormState({\r\n      ...formState,\r\n      [event.target.name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form css={formDefaultStyle} onSubmit={onSubmitHandler}>\r\n      <InputSlider\r\n        id={\"registerEmail\"}\r\n        type={\"email\"}\r\n        name={\"email\"}\r\n        labelText={\"Your email\"}\r\n        value={formState.email}\r\n        onChange={onChangeHandler}\r\n      />\r\n      <InputSlider\r\n        id={\"registerPassword\"}\r\n        type={\"password\"}\r\n        name={\"password\"}\r\n        labelText={\"Password\"}\r\n        value={formState.password}\r\n        onChange={onChangeHandler}\r\n      />\r\n      <InputSlider\r\n        id={\"registerName\"}\r\n        type={\"text\"}\r\n        name={\"name\"}\r\n        labelText={\"Your name\"}\r\n        value={formState.name}\r\n        onChange={onChangeHandler}\r\n      />\r\n      <InputSlider\r\n        id={\"registerSurname\"}\r\n        type={\"text\"}\r\n        name={\"surname\"}\r\n        labelText={\"Your surname\"}\r\n        value={formState.surname}\r\n        onChange={onChangeHandler}\r\n      />\r\n      <InputSlider\r\n        id={\"registerAge\"}\r\n        type={\"number\"}\r\n        name={\"age\"}\r\n        labelText={\"Your age\"}\r\n        value={formState.age}\r\n        onChange={onChangeHandler}\r\n      />\r\n\r\n      <FormButton btnText=\"register\" />\r\n      {/* <input type=\"submit\" value=\"register\" /> */}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","// Libs\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n// Components\r\nimport InputSlider from \"../atoms/inputs/InputSlider\";\r\nimport FormButton from \"../atoms/buttons/FormButton\";\r\n// Utils\r\nimport { setCookie } from \"../../utils/generalUtils\";\r\n// Styles\r\nimport formDefaultStyle from \"./styles/formDefaultStyle\";\r\n\r\n/** @jsx jsx */\r\n\r\nconst LoginForm = ({ setTokenState, setIsUserLoggedIn }) => {\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    axios.post(\"/users/login\", formState).then((res) => {\r\n      const {\r\n        data: { token },\r\n      } = res;\r\n      setTokenState(token);\r\n      setIsUserLoggedIn(true);\r\n      setCookie(\"token\", token);\r\n    });\r\n  };\r\n  const onChangeHandler = (event) => {\r\n    const {\r\n      target: { value, name },\r\n    } = event;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const initialState = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const [formState, setFormState] = useState(initialState);\r\n\r\n  return (\r\n    <form css={formDefaultStyle} onSubmit={onSubmitHandler}>\r\n      <InputSlider\r\n        // autoFocus={true}\r\n        id={\"loginEmail\"}\r\n        type={\"email\"}\r\n        name={\"email\"}\r\n        labelText={\"Your email\"}\r\n        value={formState.email}\r\n        onChange={onChangeHandler}\r\n        autoFocus={true}\r\n      />\r\n      <InputSlider\r\n        id={\"loginPassword\"}\r\n        type={\"password\"}\r\n        name={\"password\"}\r\n        labelText={\"Password\"}\r\n        value={formState.password}\r\n        onChange={onChangeHandler}\r\n      />\r\n      <FormButton btnText={\"login\"} />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { Fragment } from \"react\";\r\nimport RegisterForm from \"../Forms/RegisterForm\";\r\nimport LoginForm from \"../Forms/LoginForm\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Login = ({ setIsUserLoggedIn, setTokenState, isUserLoggedIn }) => {\r\n  if (isUserLoggedIn) {\r\n    return <Redirect to={\"/tanks\"} />;\r\n  } else {\r\n    return (\r\n      <Fragment>\r\n        <LoginForm\r\n          setIsUserLoggedIn={setIsUserLoggedIn}\r\n          setTokenState={setTokenState}\r\n        />\r\n        <RegisterForm\r\n          setIsUserLoggedIn={setIsUserLoggedIn}\r\n          setTokenState={setTokenState}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Login;\r\n","// Libs\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n// Components\r\nimport InputSlider from \"../atoms/inputs/InputSlider\";\r\nimport FormButton from \"../atoms/buttons/FormButton\";\r\nimport CloseWindowButton from \"../atoms/buttons/CloseWindowButton\";\r\nimport ToggleFormButton from \"../atoms/buttons/ToggleFormButton\";\r\n// Utils\r\nimport { getAuthHeader } from \"../../utils/tokenUtils\";\r\n// Styles\r\nimport { barFormStyle, formWrapper } from \"./styles/barFormStyle\";\r\n\r\n/** @jsx jsx */\r\n\r\nconst AddTankForm = ({\r\n  tokenState,\r\n  setTanksListingState,\r\n  tanksListingState,\r\n}) => {\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    const authHeader = getAuthHeader(tokenState);\r\n    axios\r\n      .post(\"/tanks\", formState, { headers: authHeader })\r\n      .then((res) => {\r\n        setTanksListingState([...tanksListingState, res.data]);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const onChangeHandler = (event) => {\r\n    const {\r\n      target: { value, name },\r\n    } = event;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const initialState = {\r\n    name: \"\",\r\n    sizeX: \"\",\r\n    sizeY: \"\",\r\n    sizeZ: \"\",\r\n    aquariumType: \"\",\r\n  };\r\n\r\n  const [formState, setFormState] = useState(initialState);\r\n  const [isMobileFormToggled, setIsMobileFormToggled] = useState(false);\r\n\r\n  const toggleMobileFormHandler = (event) => {\r\n    event.preventDefault();\r\n    setIsMobileFormToggled(!isMobileFormToggled);\r\n    console.log(isMobileFormToggled);\r\n  };\r\n  return (\r\n    <section css={formWrapper}>\r\n      <ToggleFormButton\r\n        buttonText=\"New tank\"\r\n        onClickHandler={toggleMobileFormHandler}\r\n      />\r\n      {/* <button onClick={toggleMobileFormHandler} css={formToggleStyle}>\r\n        New tank\r\n      </button> */}\r\n      <form css={barFormStyle(isMobileFormToggled)} onSubmit={onSubmitHandler}>\r\n        <CloseWindowButton onClickHandler={toggleMobileFormHandler} />\r\n        <InputSlider\r\n          id={\"tankName\"}\r\n          type={\"text\"}\r\n          name={\"name\"}\r\n          labelText={\"tank name\"}\r\n          value={formState.name}\r\n          onChange={onChangeHandler}\r\n        />\r\n        <InputSlider\r\n          id={\"TankSizeX\"}\r\n          type={\"number\"}\r\n          name={\"sizeX\"}\r\n          labelText={\"tank size on X axis\"}\r\n          value={formState.sizeX}\r\n          onChange={onChangeHandler}\r\n        />\r\n        <InputSlider\r\n          id={\"TankSizeY\"}\r\n          type={\"number\"}\r\n          name={\"sizeY\"}\r\n          labelText={\"tank size on Y axis\"}\r\n          value={formState.sizeY}\r\n          onChange={onChangeHandler}\r\n        />\r\n        <InputSlider\r\n          id={\"TankSizeZ\"}\r\n          type={\"number\"}\r\n          name={\"sizeZ\"}\r\n          labelText={\"tank size on Z axis\"}\r\n          value={formState.sizeZ}\r\n          onChange={onChangeHandler}\r\n        />\r\n        <InputSlider\r\n          id={\"tankAquariumType\"}\r\n          type={\"text\"}\r\n          name={\"aquariumType\"}\r\n          labelText={\"aquarium type\"}\r\n          value={formState.aquariumType}\r\n          onChange={onChangeHandler}\r\n        />\r\n\r\n        <FormButton btnText=\"Add tank\" />\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AddTankForm;\r\n","import React from \"react\";\r\nimport { css, jsx } from \"@emotion/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/** @jsx jsx */\r\n\r\nconst tankCardStyle = css`\r\n  background-color: #fff;\r\n  border-radius: 16px;\r\n  list-style: none;\r\n  box-shadow: -1px 1px 21px 10px rgba(240, 243, 248, 1);\r\n  margin-bottom: 2rem;\r\n  & .card-header {\r\n    color: #7e84cc;\r\n  }\r\n`;\r\n\r\nconst linkStyle = css`\r\n  text-decoration: none;\r\n  padding: 2rem 4rem;\r\n  display: block;\r\n`;\r\n\r\nconst TankCard = ({ tankData }) => {\r\n  return (\r\n    <li className=\"tank-card\" css={tankCardStyle}>\r\n      <Link css={linkStyle} to={`/tanks/${tankData._id}`}>\r\n        <h3 className=\"card-header\">{tankData.name}</h3>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TankCard;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n// Components\r\nimport TankCard from \"../atoms/cards/TankCard\";\r\n\r\n/** @jsx jsx */\r\n\r\nconst tanksListingStyle = css`\r\n  /* padding: 2rem 4rem; */\r\n  /* background-color: #fff; */\r\n  /* border-radius: 0 0 16px 16px; */\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  & > .tank-card {\r\n    flex-basis: calc(50% - 2rem);\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst TanksListing = ({ tanksListingState }) => {\r\n  return (\r\n    <ul css={tanksListingStyle}>\r\n      {tanksListingState.map((tank) => (\r\n        <TankCard key={tank._id} tankData={tank} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TanksListing;\r\n","// Libs\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n// Components\r\nimport Dashboard from \"../Dashboard/Dashboard\";\r\nimport AddTankForm from \"../Forms/AddTankForm\";\r\nimport TankListing from \"../Listings/TanksListing\";\r\n// Utils\r\nimport { getAuthHeader } from \"../../utils/tokenUtils\";\r\n\r\nconst TanksHome = ({ isUserLoggedIn, tokenState }) => {\r\n  const [tanksListingState, setTanksListingState] = useState([]);\r\n  const populateTanksListing = async (tokenState) => {\r\n    const authHeader = getAuthHeader(tokenState);\r\n    try {\r\n      const { data } = await axios.get(\"/tanks\", { headers: authHeader });\r\n      setTanksListingState(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    isUserLoggedIn && populateTanksListing();\r\n  }, [isUserLoggedIn, tokenState]);\r\n\r\n  if (isUserLoggedIn) {\r\n    return (\r\n      <Fragment>\r\n        <Dashboard>\r\n          <AddTankForm\r\n            tokenState={tokenState}\r\n            setTanksListingState={setTanksListingState}\r\n            tanksListingState={tanksListingState}\r\n          />\r\n          <TankListing tanksListingState={tanksListingState} />\r\n        </Dashboard>\r\n      </Fragment>\r\n    );\r\n  } else {\r\n    return <Redirect to={\"/\"} />;\r\n  }\r\n};\r\n\r\nexport default TanksHome;\r\n","import React, {Fragment} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst UserProfile = ({userAccountInfo, isUserLoggedIn}) => {\r\n\r\n    console.log('profile ingfo is:', userAccountInfo)\r\n   \r\n    if(isUserLoggedIn){\r\n         const {name, email, surname, age, date} = userAccountInfo;\r\n        return (\r\n            <Fragment>\r\n                <h2>Hello {name}</h2>\r\n                <p>Email: {email} </p>\r\n                <p>Name and surname: {name} {surname}</p>\r\n                <p>age: {age}</p>\r\n                <p>account created date: {date} </p>\r\n            </Fragment>\r\n        )\r\n    } else {\r\n        return <Redirect to={'/'} />\r\n    }\r\n\r\n}\r\n\r\nexport default UserProfile;","import React, {Fragment} from 'react';\r\n\r\nconst About = () => {\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>About alpha tank</h2>\r\n            <article>\r\n                <p>\r\n                    Alpha tanks is a application created in order to help aquarium owners manage their water test results.\r\n                </p>\r\n                <p>\r\n                    Current app version: pre-alpha\r\n                </p>\r\n            </article>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default About;","// Libs\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Global, css, jsx } from \"@emotion/core\";\r\nimport ReactGa from \"react-ga\";\r\n\r\n// Components\r\nimport MainContainer from \"./components/MainContainer/MainContainer\";\r\nimport Tank from \"./components/Pages/Tank\";\r\nimport Login from \"./components/Pages/Login\";\r\nimport TanksHome from \"./components/Pages/TanksHome\";\r\nimport UserProfile from \"./components/Pages/UserProfile\";\r\nimport About from \"./components/Pages/About\";\r\n// Utils\r\nimport {\r\n  getUserToken,\r\n  formatAuthorizationHeader,\r\n  formatBearerToken,\r\n} from \"./utils/tokenUtils\";\r\nimport { pipe } from \"./utils/generalUtils\";\r\n\r\n/** @jsx jsx */\r\nconst globalStyles = css`\r\n  @import url(\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap\");\r\n  *,\r\n  *::after,\r\n  *::before {\r\n    box-sizing: border-box;\r\n  }\r\n  html {\r\n    font-size: 10px;\r\n  }\r\n  body {\r\n    font-family: \"Roboto\", sans-serif;\r\n    font-size: 16px;\r\n    background-color: #f0f3f8;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  ul,\r\n  li,\r\n  ol {\r\n    margin: 0;\r\n    padding-inline-start: 0;\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n  const [tokenState, setTokenState] = useState(null);\r\n  const [userAccountInfo, setUserAccountInfo] = useState({});\r\n  const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\r\n\r\n  const loginOnMount = async (isUserLoggedIn, tokenState) => {\r\n    const token = getUserToken(tokenState);\r\n    console.log(\"token is:\", token);\r\n    if (!isUserLoggedIn && token) {\r\n      console.log(token);\r\n      const authHeader = pipe(\r\n        formatBearerToken,\r\n        formatAuthorizationHeader\r\n      )(token);\r\n      console.log(authHeader);\r\n      try {\r\n        const { data } = await axios.get(\"/users/me\", { headers: authHeader });\r\n        setTokenState(token);\r\n        setIsUserLoggedIn(true);\r\n        setUserAccountInfo(data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    ReactGa.initialize(\"UA-172045582-1\");\r\n    //report page view\r\n    ReactGa.pageview(window.location.pathname + window.location.search);\r\n  }, []);\r\n  useEffect(() => {\r\n    loginOnMount(isUserLoggedIn, tokenState);\r\n  }, [isUserLoggedIn]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Global styles={globalStyles} />\r\n      <Router>\r\n        <MainContainer\r\n          setIsUserLoggedIn={setIsUserLoggedIn}\r\n          setTokenState={setTokenState}\r\n        >\r\n          <Route\r\n            path=\"/\"\r\n            exact\r\n            render={() => (\r\n              <Login\r\n                isUserLoggedIn={isUserLoggedIn}\r\n                setIsUserLoggedIn={setIsUserLoggedIn}\r\n                tokenState={tokenState}\r\n                setTokenState={setTokenState}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/tanks\"\r\n            exact\r\n            render={() => (\r\n              <TanksHome\r\n                isUserLoggedIn={isUserLoggedIn}\r\n                tokenState={tokenState}\r\n              />\r\n            )}\r\n          />\r\n          {/* Started working on fixing this route */}\r\n          <Route\r\n            path=\"/tanks/:tankID\"\r\n            exact\r\n            render={(props) => (\r\n              <Tank\r\n                {...props}\r\n                tokenState={tokenState}\r\n                isUserLoggedIn={isUserLoggedIn}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/me\"\r\n            // exec\r\n            render={() => (\r\n              <UserProfile\r\n                userAccountInfo={userAccountInfo}\r\n                isUserLoggedIn={isUserLoggedIn}\r\n                setIsUserLoggedIn={setIsUserLoggedIn}\r\n              />\r\n            )}\r\n          />\r\n          <Route path=\"/about\" exec component={About} />\r\n        </MainContainer>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}