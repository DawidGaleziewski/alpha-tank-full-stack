{"version":3,"sources":["utils/generalUtils.ts","components/atoms/LogoutButton/LogoutButton.js","components/Header/Header.js","components/atoms/alerts/BarAlert.js","components/MainContainer/MainContainer.js","components/Dashboard/Dashboard.js","components/atoms/loadings/LoadingDefault.js","utils/tokenUtils.ts","components/atoms/buttons/DeleteBtn.js","components/Listings/TestsListing.js","components/atoms/inputs/InputSlider.js","components/atoms/inputs/DatePicker.js","components/atoms/buttons/FormButton.js","components/atoms/buttons/ToggleFormButton.js","components/atoms/buttons/CloseWindowButton.js","components/Forms/styles/barFormStyle.js","components/Forms/AddTestForm.js","components/Pages/Tank.js","components/Forms/styles/formDefaultStyle.js","components/Forms/RegisterForm.js","components/Forms/LoginForm.js","components/Pages/Login.js","components/Forms/AddTankForm.js","components/atoms/cards/TankCard.js","components/Listings/TanksListing.js","components/Pages/TanksHome.js","components/Pages/UserProfile.js","components/Pages/About.js","hooks/useAutoLoginAttempt.ts","hooks/useAlerts.ts","globalStyles.tsx","App.tsx","index.js"],"names":["pipe","fns","x","reduce","v","f","setCookie","label","data","document","cookie","error","console","log","formatTwoDigits","number","string","toString","length","Number","buttonStyle","css","LogoutButton","btnText","setIsUserLoggedIn","setTokenState","className","onClick","headerStyle","linkStyle","toggleBtnStyle","Header","useState","isNavToggled","setIsNavToggled","navbarStyle","src","to","alertStyle","alertType","backgroundColor","color","closeBtnStyle","BarAlert","alertText","removeAlert","id","event","mainContainerStyle","MainContainer","children","alerts","map","alert","key","type","text","dashboardStyle","Dashboard","loaderStyle","LoadingDefault","alt","getAuthHeader","tokenState","getUserToken","formatBearerToken","formatAuthorizationHeader","bearerToken","Authorization","userToken","indexOf","cookieValue","split","filter","row","getCookie","modalStyle","deleteBtnStyle","isToggled","confirmStyle","declineStyle","DeleteBtn","modalText","testID","removeItemFromState","endpointURL","toggleModalHandler","setIsToggled","isLoading","setIsloading","deleteItem","a","authHeader","axios","delete","headers","tableWrapper","tableStyle","TestsListing","testsState","removeTestFromState","test","_id","dateString","dateObject","Date","month","getUTCMonth","day","getDate","getFullYear","formatDateYYYYMMDD","dateOfTest","nh3","nh4","no3","ph","tempCelc","inputWrapperStyle","inputStyle","InputSlider","name","labelText","value","onChange","labelStyle","placeholder","htmlFor","DatePicker","onChangeHandler","FormButton","autoFocus","ReactGA","category","action","window","location","pathname","search","formToggleStyle","ToggleFormButton","buttonText","onClickHandler","CloseWindowButton","formWrapper","barFormStyle","isFormToggled","AddTestForm","tankID","setTestsState","addAlert","formState","setFormState","isMobileFormToggled","setIsMobileFormToggled","toggleMobileFormHandler","preventDefault","onSubmitHandler","post","target","checked","onSubmit","Tank","isUserLoggedIn","match","params","tankState","setTankState","populateTankAndTestsInformation","get","tank","tests","useEffect","formDefaultStyle","RegisterForm","email","password","surname","age","then","res","token","catch","response","status","LoginForm","Login","AddTankForm","setTanksListingState","tanksListingState","sizeX","sizeY","sizeZ","aquariumType","tankCardStyle","TankCard","tankData","tanksListingStyle","TanksListing","TanksHome","populateTanksListing","UserProfile","userAccountInfo","date","About","loginOnMount","setUserAccountInfo","useAutoLoginAttempt","useAlerts","lastTimeout","useRef","clearTimeout","current","timeoutFn","setTimeout","lastAlertId","globalStyles","App","setAlerts","ReactGa","initialize","pageview","uuidv4","updatedAlerts","styles","path","exact","render","props","exec","component","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d136c45d.chunk.js","sourcesContent":["const pipe = (...fns: Array<Function>) => (x: any) =>\r\n  fns.reduce((v, f) => f(v), x);\r\n\r\nconst setCookie = (label: string, data: string) => {\r\n  try {\r\n    // console.log(\"label:\", label, \"data\", data);\r\n    document.cookie = `${label}=${data}`;\r\n  } catch (error) {\r\n    console.log(\"Error setting cookies\");\r\n  }\r\n};\r\n\r\nconst deleteFromCookie = (label: string) => {\r\n  document.cookie = `${label}= ; expires = Thu, 01 Jan 1970 00:00:00 GMT`;\r\n};\r\n\r\nconst getCookie = (label: string) => {\r\n  let cookieValue = null;\r\n  try {\r\n    if (document.cookie.indexOf(label) !== 0) {\r\n      cookieValue = document.cookie\r\n        .split(\";\")\r\n        .filter((row) => row.indexOf(label) !== -1)[0]\r\n        .split(\"=\")[1];\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n\r\n  // console.log(cookieValue);\r\n  return cookieValue;\r\n};\r\n\r\nconst deepCopy = (obj: {}) => {\r\n  const newObj = JSON.parse(JSON.stringify(obj));\r\n  return newObj;\r\n};\r\n\r\nconst formatTwoDigits = (number: number): number => {\r\n  const string = number.toString();\r\n  return string.length > 1 ? +string : Number(\"0\" + string);\r\n};\r\n\r\nconst formatDateYYYYMMDD = (dateString: string) => {\r\n  const dateObject = new Date(dateString);\r\n  const month = formatTwoDigits(dateObject.getUTCMonth());\r\n  const day = formatTwoDigits(dateObject.getDate());\r\n  const formatedDateString = `${dateObject.getFullYear()}-${month}-${day}`;\r\n  return formatedDateString;\r\n};\r\n\r\nexport {\r\n  pipe,\r\n  setCookie,\r\n  deleteFromCookie,\r\n  getCookie,\r\n  deepCopy,\r\n  formatDateYYYYMMDD,\r\n};\r\n","import React from \"react\";\r\nimport { deleteFromCookie } from \"../../../utils/generalUtils\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n\r\n/**@jsx jsx */\r\n\r\nconst buttonStyle = css`\r\n  background-color: rgba(0, 0, 0, 0);\r\n  border: 1px solid #7e84cc;\r\n  padding: 0.8rem 4rem;\r\n  border-radius: 16px;\r\n  color: #7e84cc;\r\n  cursor: pointer;\r\n  margin-left: auto;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nconst LogoutButton = ({ btnText, setIsUserLoggedIn, setTokenState }) => {\r\n  const onClickHandler = () => {\r\n    deleteFromCookie(\"token\");\r\n    setIsUserLoggedIn(false);\r\n    setTokenState(null);\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className=\"logout-button\"\r\n      css={buttonStyle}\r\n      onClick={onClickHandler}\r\n    >\r\n      {btnText}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LogoutButton;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n// Componets\r\nimport LogoutButton from \"../atoms/LogoutButton/LogoutButton\";\r\n\r\n/**@jsx jsx */\r\n\r\nconst headerStyle = css`\r\n  margin-top: 4rem;\r\n  margin-bottom: 4rem;\r\n  @media screen and (max-width: 768px) {\r\n    margin-top: 0;\r\n  }\r\n`;\r\n\r\nconst linkStyle = css`\r\n  font-weight: 700;\r\n  color: #7e84cc;\r\n  text-decoration: none;\r\n  padding: 2rem;\r\n  padding-bottom: 1.5rem;\r\n  display: block;\r\n  border-bottom: 5px solid #fff;\r\n  transition: all ease-in 0.3s;\r\n  &:hover {\r\n    border-bottom-color: #b0b3df;\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: inline-block;\r\n  }\r\n`;\r\n\r\nconst toggleBtnStyle = css`\r\n  position: absolute;\r\n  top: 2rem;\r\n  right: 4rem;\r\n  height: 5rem;\r\n  width: 5rem;\r\n  font-size: 0;\r\n  color: rgba(0, 0, 0, 0);\r\n  display: none;\r\n  border-radius: 16px;\r\n  border: 1px solid #000;\r\n  background-color: #fff;\r\n  &:after {\r\n    position: absolute;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst Header = ({ setIsUserLoggedIn, setTokenState }) => {\r\n  const [isNavToggled, setIsNavToggled] = useState(false);\r\n  const onToggleHandler = () => {\r\n    setIsNavToggled(!isNavToggled);\r\n    console.log(isNavToggled);\r\n  };\r\n\r\n  const navbarStyle = css`\r\n    background-color: #fff;\r\n    max-width: 1170px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    border-radius: 16px;\r\n    padding: 0 2rem;\r\n\r\n    @media screen and (max-width: 768px) {\r\n      padding-top: 8rem;\r\n      /* background-color: rgba(0,0,0,0); */\r\n      background-color: ${isNavToggled ? \"#ffffff\" : \"rgba(0,0,0,0);\"};\r\n    }\r\n\r\n    & > ul {\r\n      list-style: none;\r\n      display: flex;\r\n      & > li:last-of-type {\r\n        margin-left: auto;\r\n      }\r\n      @media screen and (max-width: 768px) {\r\n        display: ${isNavToggled ? \"flex\" : \"none\"};\r\n        flex-direction: column;\r\n        padding: 2rem;\r\n        justify-content: right;\r\n\r\n        & > li {\r\n          display: inline-block;\r\n          text-align: right;\r\n        }\r\n      }\r\n    }\r\n\r\n    & .logout-button {\r\n      margin-top: 1.3rem;\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <header css={headerStyle}>\r\n      <nav css={navbarStyle}>\r\n        <button onClick={onToggleHandler} css={toggleBtnStyle}>\r\n          <img src=\"navbar/icons8-menu.svg\" />\r\n        </button>\r\n        <ul>\r\n          <li>\r\n            <Link css={linkStyle} to={\"/\"}>\r\n              home\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link css={linkStyle} to={\"/tanks\"}>\r\n              my tanks\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link css={linkStyle} to={\"/me\"}>\r\n              my profile\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <LogoutButton\r\n              btnText={\"Logout\"}\r\n              setIsUserLoggedIn={setIsUserLoggedIn}\r\n              setTokenState={setTokenState}\r\n            />\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { jsx, css } from \"@emotion/core\";\r\n/**@jsx jsx */\r\n\r\nconst alertStyle = (alertType) => {\r\n  let backgroundColor = \"\";\r\n  let color = \"\";\r\n\r\n  switch (alertType) {\r\n    case \"danger\":\r\n      backgroundColor = \"#f45356\";\r\n      color = \"#f9d6d4\";\r\n      break;\r\n    case \"success\":\r\n      backgroundColor = \"#44cb9a\";\r\n      color = \"#ddf8f4\";\r\n      break;\r\n    case \"warning\":\r\n      backgroundColor = \"#f9d687\";\r\n      color = \"#62543a\";\r\n      break;\r\n    default:\r\n      backgroundColor = \"#5fc1dd\";\r\n      color = \"#ddf4f9\";\r\n  }\r\n  return css`\r\n    background-color: ${backgroundColor};\r\n    max-width: 1170px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    padding: 1.6rem 4rem;\r\n    color: ${color};\r\n    border-radius: 4px;\r\n    position: relative;\r\n    margin-bottom: 2rem;\r\n    box-shadow: -1px 1px 21px 10px rgba(240, 243, 248, 1);\r\n  `;\r\n};\r\n\r\nconst closeBtnStyle = css`\r\n  position: absolute;\r\n  right: 2rem;\r\n  top: 50%;\r\n  transform: translate(0, -50%);\r\n  padding: 0;\r\n  background-color: rgba(0, 0, 0, 0);\r\n  color: #fff;\r\n  margin: 0;\r\n  border: none;\r\n  cursor: pointer;\r\n  display: block;\r\n`;\r\n\r\nconst BarAlert = ({ alertText, alertType, removeAlert, id }) => {\r\n  const closeBtnClickHandler = (event) => {\r\n    removeAlert(id);\r\n  };\r\n  return (\r\n    <div css={alertStyle(alertType)}>\r\n      {alertText}\r\n      <span onClick={closeBtnClickHandler} css={closeBtnStyle}>\r\n        X\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarAlert;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { css, jsx } from \"@emotion/core\";\r\nimport Header from \"../Header/Header\";\r\nimport BarAlert from \"../atoms/alerts/BarAlert\";\r\n\r\n/** @jsx jsx */\r\nconst mainContainerStyle = css`\r\n  max-width: 1170px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nconst MainContainer = ({\r\n  setIsUserLoggedIn,\r\n  children,\r\n  setTokenState,\r\n  alerts,\r\n  removeAlert,\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      <Header\r\n        setIsUserLoggedIn={setIsUserLoggedIn}\r\n        setTokenState={setTokenState}\r\n      />\r\n      {alerts.map((alert) => (\r\n        <BarAlert\r\n          key={alert.id}\r\n          alertType={alert.type}\r\n          alertText={alert.text}\r\n          removeAlert={removeAlert}\r\n          id={alert.id}\r\n        />\r\n      ))}\r\n      {/* <BarAlert\r\n        alertText={\"Danger: something went wrong!\"}\r\n        alertType={\"danger\"}\r\n      /> */}\r\n      <main css={mainContainerStyle}>{children}</main>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MainContainer;\r\n","import React from \"react\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n\r\n/** @jsx jsx */\r\n\r\nconst dashboardStyle = css`\r\n  padding: 4rem 4rem;\r\n  background-color: #ffffff;\r\n  border-radius: 16px;\r\n`;\r\n\r\nconst Dashboard = ({ children }) => {\r\n  return <section css={dashboardStyle}>{children}</section>;\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n\r\n/** @jsx jsx */\r\nconst loaderStyle = css`\r\n  text-align: center;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  & > .loading-gif {\r\n    /* margin-left: auto;\r\n    margin-right: auto;\r\n    display: inline-block; */\r\n  }\r\n`;\r\n\r\nconst LoadingDefault = () => {\r\n  return (\r\n    <div css={loaderStyle}>\r\n      <img\r\n        className=\"loading-gif\"\r\n        src=\"/animations/loading_sharks.gif\"\r\n        alt=\"Loading please wait...\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingDefault;\r\n","import { pipe, getCookie } from \"./generalUtils\";\r\n\r\nconst getAuthHeader = (tokenState: string) => {\r\n  return pipe(\r\n    getUserToken,\r\n    formatBearerToken,\r\n    formatAuthorizationHeader\r\n  )(tokenState);\r\n};\r\n\r\nconst formatAuthorizationHeader = (bearerToken: string) => {\r\n  if (!bearerToken) {\r\n    return null;\r\n  }\r\n  return {\r\n    Authorization: bearerToken,\r\n  };\r\n};\r\n\r\nconst formatBearerToken = (userToken: string) => {\r\n  if (!userToken) {\r\n    return null;\r\n  }\r\n  const bearerToken = `Bearer ${userToken}`;\r\n  return bearerToken;\r\n};\r\n\r\nconst getUserToken = (tokenState: string | null) => {\r\n  let userToken = null;\r\n\r\n  if (tokenState) {\r\n    console.log(\"utils token state is:\", tokenState);\r\n    userToken = tokenState;\r\n  } else if (document.cookie.indexOf(\"token\") !== -1) {\r\n    try {\r\n      // console.log(\"user token:\", getCookie(\"token\"));\r\n      userToken = getCookie(\"token\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  return userToken;\r\n};\r\n\r\nexport {\r\n  getAuthHeader,\r\n  formatAuthorizationHeader,\r\n  formatBearerToken,\r\n  getUserToken,\r\n};\r\n","import React, { useState, Fragment } from \"react\";\r\nimport LoadingDefault from \"../../atoms/loadings/LoadingDefault\";\r\nimport { getAuthHeader } from \"../../../utils/tokenUtils\";\r\nimport axios from \"axios\";\r\n\r\nimport { jsx, css } from \"@emotion/core\";\r\n/** @jsx jsx */\r\nconst buttonStyle = css`\r\n  border-radius: 2px;\r\n  border: 0;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  padding: 0.8rem;\r\n`;\r\n\r\nconst modalStyle = css`\r\n  padding: 2rem 4rem;\r\n  background-color: #fff;\r\n  border-radius: 16px;\r\n  box-shadow: -1px 1px 21px 10px rgba(240, 243, 248, 1);\r\n  position: fixed;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  & .modal-button:not(:last-of-type) {\r\n    margin-right: 2rem;\r\n  }\r\n`;\r\n\r\nconst deleteBtnStyle = (isToggled) => css`\r\n${buttonStyle}\r\nbackground-color: ${isToggled ? \"#5f5f5f\" : \"#db2828\"} ;\r\ncursor: ${isToggled ? \"not-allowed\" : \"pointer\"}  ;\r\n`;\r\n\r\nconst confirmStyle = () => css`\r\n  ${buttonStyle}\r\n  background-color:#3dba7c;\r\n`;\r\n\r\nconst declineStyle = css`\r\n  ${buttonStyle}\r\n  background-color: #db2828;\r\n`;\r\n\r\nconst DeleteBtn = ({\r\n  btnText,\r\n  modalText,\r\n  tokenState,\r\n  testID,\r\n  // setTestsState,\r\n  // testsState,\r\n  removeItemFromState,\r\n  endpointURL,\r\n}) => {\r\n  const toggleModalHandler = () => {\r\n    setIsToggled(!isToggled);\r\n  };\r\n\r\n  const [isToggled, setIsToggled] = useState(false);\r\n  const [isLoading, setIsloading] = useState(false);\r\n  const deleteItem = async (testID, tokenState) => {\r\n    try {\r\n      setIsloading(true);\r\n      const authHeader = getAuthHeader(tokenState);\r\n      await axios.delete(`${endpointURL}/${testID}`, {\r\n        headers: authHeader,\r\n      });\r\n\r\n      removeItemFromState(testID);\r\n      setIsloading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setIsloading(false);\r\n    }\r\n  };\r\n\r\n  const onConfimHandler = () => {\r\n    deleteItem(testID, tokenState);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <button onClick={toggleModalHandler} css={deleteBtnStyle(isToggled)}>\r\n        {btnText}\r\n      </button>\r\n      {isToggled ? (\r\n        <div css={modalStyle}>\r\n          {isLoading ? (\r\n            <LoadingDefault />\r\n          ) : (\r\n            <Fragment>\r\n              <p>{modalText} </p>\r\n\r\n              <button\r\n                className=\"modal-button\"\r\n                onClick={onConfimHandler}\r\n                css={confirmStyle}\r\n              >\r\n                Yes\r\n              </button>\r\n              <button\r\n                className=\"modal-button\"\r\n                onClick={toggleModalHandler}\r\n                css={declineStyle}\r\n              >\r\n                No\r\n              </button>\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default DeleteBtn;\r\n","import React from \"react\";\r\nimport { css, jsx } from \"@emotion/core\";\r\nimport { formatDateYYYYMMDD } from \"../../utils/generalUtils\";\r\n\r\nimport DeleteBtn from \"../atoms/buttons/DeleteBtn\";\r\n\r\n/** @jsx jsx */\r\n\r\nconst tableWrapper = css`\r\n  overflow-y: scroll;\r\n`;\r\nconst tableStyle = css`\r\n  /* display: block; */\r\n  font-size: 1.6rem;\r\n  text-align: left;\r\n  background-color: #fff;\r\n  /* padding: 2rem 4rem; */\r\n  border-collapse: collapse;\r\n  /* border-radius: 16px; */\r\n\r\n  & thead tr {\r\n    font-weight: 700;\r\n    color: #7e84cc;\r\n    border-bottom: 1px solid #b4b8e1;\r\n  }\r\n\r\n  th,\r\n  td {\r\n    padding: 1.6rem;\r\n    /* &:first-of-type {\r\n      padding: 0.8rem 0.8rem 0.8rem 0;\r\n    } */\r\n    &:nth-of-type(2n + 1) {\r\n      background-color: #f8f8fc;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TestsListing = ({ testsState, tokenState, removeTestFromState }) => {\r\n  return (\r\n    <section css={tableWrapper}>\r\n      <table css={tableStyle}>\r\n        <thead>\r\n          <tr>\r\n            <th>Date of test</th>\r\n            <th>NH3</th>\r\n            <th>NH4</th>\r\n            <th>NO3</th>\r\n            <th>PH</th>\r\n            <th>temperature (celc)</th>\r\n            <th>delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {testsState.map((test) => (\r\n            <tr key={test._id}>\r\n              <td>{formatDateYYYYMMDD(test.dateOfTest)}</td>\r\n              <td>{test.nh3}</td>\r\n              <td>{test.nh4}</td>\r\n              <td>{test.no3}</td>\r\n              <td>{test.ph}</td>\r\n              <td>{test.tempCelc}</td>\r\n              <td>\r\n                <DeleteBtn\r\n                  btnText=\"Delete\"\r\n                  modalText=\"Are you sure you want to delete this?\"\r\n                  tokenState={tokenState}\r\n                  testID={test._id}\r\n                  removeItemFromState={removeTestFromState}\r\n                  // setTestsState={setTestsState}\r\n                  // testsState={testsState}\r\n                  endpointURL=\"/tests\"\r\n                />\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TestsListing;\r\n","import React from \"react\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n/** @jsx jsx */\r\n\r\nconst inputWrapperStyle = css`\r\n  width: 100%;\r\n  position: relative;\r\n  display: block;\r\n`;\r\n\r\nconst inputStyle = css`\r\n  width: 100%;\r\n  padding: 0.8rem;\r\n  border: none;\r\n  border-bottom: 1px solid #92a2ae;\r\n  outline: none;\r\n  display: block;\r\n  &:focus {\r\n    border-bottom: 1px solid #5a95e6;\r\n  }\r\n`;\r\n\r\nconst InputSlider = ({ id, type, name, labelText, value, onChange }) => {\r\n  const labelStyle = css`\r\n    position: absolute;\r\n    left: 0.8rem;\r\n    top: 50%;\r\n    font-size: 1.6rem;\r\n    color: #92a2ae;\r\n    transform: translate(-10%, -170%) scale(0.8);\r\n\r\n    input:placeholder-shown + &,\r\n    input::not(-webkit-autofill) {\r\n      transform: translate(0, -50%);\r\n    }\r\n    transition: all ease-in 0.3s;\r\n    pointer-events: none;\r\n  `;\r\n  return (\r\n    <div className=\"input-slider-wrapper\" css={inputWrapperStyle}>\r\n      <input\r\n        onChange={onChange}\r\n        css={inputStyle}\r\n        id={id}\r\n        type={type}\r\n        name={name}\r\n        value={value}\r\n        placeholder=\" \"\r\n      />\r\n      <label css={labelStyle} htmlFor={id}>\r\n        {labelText}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputSlider;\r\n","import React from \"react\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n\r\n/** @jsx jsx */\r\nconst inputWrapperStyle = css`\r\n  min-width: 18rem;\r\n  position: relative;\r\n\r\n  & > label {\r\n    position: absolute;\r\n    left: 0.8rem;\r\n    top: 50%;\r\n    font-size: 1.6rem;\r\n    /* transform: translate(0, -50%); */\r\n    transform: translate(-16%, -170%) scale(0.8);\r\n    pointer-events: none;\r\n    color: #92a2ae;\r\n  }\r\n\r\n  & > input {\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    border: none;\r\n    border-bottom: 1px solid #92a2ae;\r\n    outline: none;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst DatePicker = ({ id, name, labelText, value, onChangeHandler }) => {\r\n  return (\r\n    <div\r\n      className=\"input-slider-wrapper--date\"\r\n      css={inputWrapperStyle}\r\n      className=\"inputWrapper\"\r\n    >\r\n      <input\r\n        id={id}\r\n        type=\"date\"\r\n        name={name}\r\n        onChange={onChangeHandler}\r\n        value={value}\r\n      />\r\n      <label htmlFor={id}>{labelText}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DatePicker;\r\n","import React from \"react\";\r\nimport { css, jsx } from \"@emotion/core\";\r\nimport ReactGA from \"react-ga\";\r\n\r\n/** @jsx jsx */\r\nconst buttonStyle = css`\r\n  background-color: #9da7b4;\r\n  border: none;\r\n  padding: 0.8rem;\r\n  border-radius: 2px;\r\n  cursor: pointer;\r\n  text-transform: uppercase;\r\n  color: #ffffff;\r\n  display: block;\r\n  width: 100%;\r\n`;\r\n\r\nconst FormButton = ({ btnText, autoFocus }) => {\r\n  const googleAnalyticsHandler = () => {\r\n    ReactGA.event({\r\n      category: \"Button\",\r\n      action: `Click button ${btnText} from ${\r\n        window.location.pathname + window.location.search\r\n      }`,\r\n    });\r\n  };\r\n  return (\r\n    <button\r\n      onClick={googleAnalyticsHandler}\r\n      autoFocus={autoFocus}\r\n      css={buttonStyle}\r\n    >\r\n      {btnText}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default FormButton;\r\n","import React from \"react\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n\r\n/**@jsx jsx */\r\n\r\nconst formToggleStyle = css`\r\n  background-color: #3fbe90;\r\n  border: none;\r\n  padding: 0.8rem;\r\n  border-radius: 2px;\r\n  cursor: pointer;\r\n  text-transform: uppercase;\r\n  color: #ffffff;\r\n  display: block;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst ToggleFormButton = ({ buttonText, onClickHandler }) => {\r\n  return (\r\n    <button onClick={onClickHandler} css={formToggleStyle}>\r\n      {buttonText}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ToggleFormButton;\r\n","import React from \"react\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n\r\n/** @jsx jsx */\r\n\r\nconst buttonStyle = css`\r\n  width: 2rem;\r\n  height: 2rem;\r\n  padding: 0;\r\n  border: none;\r\n  cursor: pointer;\r\n  background-color: #fff;\r\n  & > img {\r\n    width: 100%;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst CloseWindowButton = ({ onClickHandler }) => {\r\n  return (\r\n    <button\r\n      onClick={onClickHandler}\r\n      className=\"close-window-btn\"\r\n      css={buttonStyle}\r\n    >\r\n      <img src=\"/close-x.png\" alt=\"close\" />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default CloseWindowButton;\r\n","import { css, jsx } from \"@emotion/core\";\r\n\r\nconst formWrapper = css`\r\n  @media screen and (max-width: 768px) {\r\n    padding: 1.6rem 0;\r\n  }\r\n`;\r\n\r\nconst barFormStyle = (isFormToggled) => css`\r\n  background-color: #fff;\r\n  /* padding: 2rem 4rem; */\r\n  /* border-radius: 16px 16px 0 0; */\r\n  display: flex;\r\n  margin-bottom: 4rem;\r\n  & > .inputWrapper {\r\n    margin-right: 1.6rem;\r\n  }\r\n\r\n  & > .input-slider-wrapper {\r\n    margin-right: 1.6rem;\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    position: absolute;\r\n    background-color: #fff;\r\n    display: ${isFormToggled ? \"block\" : \"none\"};\r\n    padding: 4rem;\r\n    border-radius: 16px;\r\n    box-shadow: -1px 1px 21px 10px rgba(240, 243, 248, 1);\r\n    left: 16px;\r\n    width: calc(100vw - 32px);\r\n    & > .input-slider-wrapper {\r\n      margin-bottom: 2rem;\r\n    }\r\n    & > .close-window-btn {\r\n      position: absolute;\r\n      top: 2rem;\r\n      right: 2rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport { barFormStyle, formWrapper };\r\n","// Libs\r\nimport React, { useState, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n// Components\r\nimport InputSlider from \"../atoms/inputs/InputSlider\";\r\nimport DatePicker from \"../atoms/inputs/DatePicker\";\r\nimport FormButton from \"../atoms/buttons/FormButton\";\r\nimport ToggleFormButton from \"../atoms/buttons/ToggleFormButton\";\r\nimport CloseWindowButton from \"../atoms/buttons/CloseWindowButton\";\r\nimport LoadingDefault from \"../atoms/loadings/LoadingDefault\";\r\n// Utils\r\nimport { getAuthHeader } from \"../../utils/tokenUtils\";\r\n// Styles\r\nimport { barFormStyle, formWrapper } from \"./styles/barFormStyle\";\r\n\r\n/**@jsx jsx */\r\n\r\nconst AddTestForm = ({\r\n  tokenState,\r\n  tankID,\r\n  setTestsState,\r\n  testsState,\r\n  addAlert,\r\n}) => {\r\n  const initialState = {\r\n    dateOfTest: \"\",\r\n    nh3: \"\",\r\n    nh4: \"\",\r\n    no3: \"\",\r\n    ph: \"\",\r\n    tempCelc: \"\",\r\n  };\r\n  const [formState, setFormState] = useState(initialState);\r\n  const [isMobileFormToggled, setIsMobileFormToggled] = useState(false);\r\n  const [isLoading, setIsloading] = useState(false);\r\n\r\n  const toggleMobileFormHandler = (event) => {\r\n    event.preventDefault();\r\n    setIsMobileFormToggled(!isMobileFormToggled);\r\n    console.log(isMobileFormToggled);\r\n  };\r\n\r\n  const onSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    const authHeader = getAuthHeader(tokenState);\r\n    setIsloading(true);\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"/tests\",\r\n        { ...formState, tankID },\r\n        { headers: authHeader }\r\n      );\r\n      setTestsState([...testsState, data]);\r\n      setIsloading(false);\r\n    } catch (error) {\r\n      addAlert(\r\n        \"danger\",\r\n        \"Ups. Unable to add test. Check data and try again\",\r\n        3000\r\n      );\r\n      console.log(error);\r\n      setIsloading(false);\r\n    }\r\n  };\r\n  const onChangeHandler = (event) => {\r\n    const value =\r\n      event.target.type === \"checkbox\"\r\n        ? event.target.checked\r\n        : event.target.value;\r\n    setFormState({ ...formState, [event.target.name]: value });\r\n  };\r\n\r\n  return (\r\n    <section css={formWrapper}>\r\n      <ToggleFormButton\r\n        buttonText=\"New test\"\r\n        onClickHandler={toggleMobileFormHandler}\r\n      />\r\n      <form css={barFormStyle(isMobileFormToggled)} onSubmit={onSubmitHandler}>\r\n        {isLoading ? (\r\n          <LoadingDefault />\r\n        ) : (\r\n          <Fragment>\r\n            <CloseWindowButton onClickHandler={toggleMobileFormHandler} />\r\n            <DatePicker\r\n              id={\"testDate\"}\r\n              name={\"dateOfTest\"}\r\n              labelText={\"date of testing\"}\r\n              value={formState.dateOfTest}\r\n              onChangeHandler={onChangeHandler}\r\n            />\r\n            <InputSlider\r\n              id={\"testNH3\"}\r\n              type={\"number\"}\r\n              name={\"nh3\"}\r\n              labelText={\"NH3\"}\r\n              value={formState.nh3}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <InputSlider\r\n              id={\"testNH4\"}\r\n              type={\"number\"}\r\n              name={\"nh4\"}\r\n              labelText={\"NH4\"}\r\n              value={formState.nh4}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <InputSlider\r\n              id={\"testNO3\"}\r\n              type={\"number\"}\r\n              name={\"no3\"}\r\n              labelText={\"NO3\"}\r\n              value={formState.no3}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <InputSlider\r\n              id={\"testPH\"}\r\n              type={\"number\"}\r\n              name={\"ph\"}\r\n              labelText={\"PH\"}\r\n              value={formState.ph}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <InputSlider\r\n              id={\"tempCelc\"}\r\n              type={\"number\"}\r\n              name={\"tempCelc\"}\r\n              labelText={\"temperature C\"}\r\n              value={formState.tempCelc}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <FormButton btnText={\"add test\"} />\r\n          </Fragment>\r\n        )}\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AddTestForm;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\n// Components\r\nimport Dashboard from \"../Dashboard/Dashboard\";\r\nimport TestsListing from \"../Listings/TestsListing\";\r\nimport AddTestForm from \"../Forms/AddTestForm\";\r\nimport LoadingDefault from \"../atoms/loadings/LoadingDefault\";\r\n// Utils\r\nimport { getAuthHeader } from \"../../utils/tokenUtils\";\r\n\r\nconst Tank = ({ isUserLoggedIn, tokenState, match, addAlert }) => {\r\n  console.log(isUserLoggedIn, tokenState, match);\r\n  console.log(isUserLoggedIn);\r\n  const {\r\n    params: { tankID },\r\n  } = match;\r\n  const [tankState, setTankState] = useState([]);\r\n  const [testsState, setTestsState] = useState([]);\r\n  const [isLoading, setIsloading] = useState(false);\r\n\r\n  const removeTestFromState = (testID) => {\r\n    console.log(\"Honker remover\");\r\n    setTestsState(testsState.filter((test) => test._id !== testID));\r\n  };\r\n\r\n  const populateTankAndTestsInformation = async (tokenState, tankID) => {\r\n    const authHeader = getAuthHeader(tokenState);\r\n    setIsloading(true);\r\n    const {\r\n      data: { tank, tests },\r\n    } = await axios.get(`/tanks/${tankID}`, { headers: authHeader });\r\n    console.log(tests);\r\n    setTankState(tank);\r\n    setTestsState(tests);\r\n    setIsloading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    populateTankAndTestsInformation(tokenState, tankID);\r\n  }, [tokenState, tankID]);\r\n\r\n  if (isUserLoggedIn) {\r\n    return (\r\n      <Dashboard>\r\n        <h2>{tankState.name}</h2>\r\n        <AddTestForm\r\n          tankID={tankID}\r\n          tokenState={tokenState}\r\n          testsState={testsState}\r\n          setTestsState={setTestsState}\r\n          addAlert={addAlert}\r\n        />\r\n        {isLoading ? (\r\n          <LoadingDefault />\r\n        ) : (\r\n          <TestsListing\r\n            testsState={testsState}\r\n            tokenState={tokenState}\r\n            setTestsState={setTestsState}\r\n            removeTestFromState={removeTestFromState}\r\n          />\r\n        )}\r\n      </Dashboard>\r\n    );\r\n  } else {\r\n    return <Redirect to={\"/\"} />;\r\n  }\r\n};\r\n\r\nexport default Tank;\r\n","import { css, jsx } from \"@emotion/core\";\r\nconst formDefaultStyle = css`\r\n  background-color: #fff;\r\n  padding: 4rem;\r\n  border-radius: 16px;\r\n  max-width: 58.5rem;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n\r\n  & > .input-slider-wrapper {\r\n    margin-bottom: 1.6rem;\r\n  }\r\n`;\r\n\r\nexport default formDefaultStyle;\r\n","// Libs\r\nimport React, { useState, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n// Components\r\nimport InputSlider from \"../atoms/inputs/InputSlider\";\r\nimport FormButton from \"../atoms/buttons/FormButton\";\r\nimport LoadingDefault from \"../atoms/loadings/LoadingDefault\";\r\n// Utils\r\nimport { setCookie } from \"../../utils/generalUtils\";\r\n// Styles\r\nimport formDefaultStyle from \"./styles/formDefaultStyle\";\r\n\r\n/** @jsx jsx */\r\n\r\nconst RegisterForm = ({ setIsUserLoggedIn, setTokenState, addAlert }) => {\r\n  const initialState = {\r\n    email: \"\",\r\n    password: \"\",\r\n    name: \"\",\r\n    surname: \"\",\r\n    age: \"\",\r\n  };\r\n  const [formState, setFormState] = useState(initialState);\r\n  const [isLoading, setIsloading] = useState(false);\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    setIsloading(true);\r\n    axios\r\n      .post(\"/users\", formState)\r\n      .then((res) => {\r\n        const {\r\n          data: { token },\r\n        } = res;\r\n\r\n        setIsloading(false);\r\n        setIsUserLoggedIn(true);\r\n        setTokenState(token);\r\n        setCookie(\"token\", token);\r\n      })\r\n      .catch((error) => {\r\n        setIsloading(false);\r\n        console.log(error.response);\r\n        const emailExsistsErrorCode = 409;\r\n        if (error.response.status === emailExsistsErrorCode) {\r\n          addAlert(\"danger\", \"This email is taken. Try another one\", 3000);\r\n        } else {\r\n          addAlert(\r\n            \"danger\",\r\n            \"Ups, unable to register. Check your data and try once again\",\r\n            3000\r\n          );\r\n        }\r\n      });\r\n  };\r\n  const onChangeHandler = (event) => {\r\n    const value =\r\n      event.target.type === \"checkbox\"\r\n        ? event.target.checked\r\n        : event.target.value;\r\n    setFormState({\r\n      ...formState,\r\n      [event.target.name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form css={formDefaultStyle} onSubmit={onSubmitHandler}>\r\n      {isLoading ? (\r\n        <LoadingDefault />\r\n      ) : (\r\n        <Fragment>\r\n          <InputSlider\r\n            id={\"registerEmail\"}\r\n            type={\"email\"}\r\n            name={\"email\"}\r\n            labelText={\"Your email\"}\r\n            value={formState.email}\r\n            onChange={onChangeHandler}\r\n          />\r\n          <InputSlider\r\n            id={\"registerPassword\"}\r\n            type={\"password\"}\r\n            name={\"password\"}\r\n            labelText={\"Password\"}\r\n            value={formState.password}\r\n            onChange={onChangeHandler}\r\n          />\r\n          <InputSlider\r\n            id={\"registerName\"}\r\n            type={\"text\"}\r\n            name={\"name\"}\r\n            labelText={\"Your name\"}\r\n            value={formState.name}\r\n            onChange={onChangeHandler}\r\n          />\r\n          <InputSlider\r\n            id={\"registerSurname\"}\r\n            type={\"text\"}\r\n            name={\"surname\"}\r\n            labelText={\"Your surname\"}\r\n            value={formState.surname}\r\n            onChange={onChangeHandler}\r\n          />\r\n          <InputSlider\r\n            id={\"registerAge\"}\r\n            type={\"number\"}\r\n            name={\"age\"}\r\n            labelText={\"Your age\"}\r\n            value={formState.age}\r\n            onChange={onChangeHandler}\r\n          />\r\n\r\n          <FormButton btnText=\"register\" />\r\n        </Fragment>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","// Libs\r\nimport React, { useState, useEffect, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n// Components\r\nimport InputSlider from \"../atoms/inputs/InputSlider\";\r\nimport FormButton from \"../atoms/buttons/FormButton\";\r\nimport LoadingDefault from \"../atoms/loadings/LoadingDefault\";\r\n// Utils\r\nimport { setCookie } from \"../../utils/generalUtils\";\r\n// Styles\r\nimport formDefaultStyle from \"./styles/formDefaultStyle\";\r\n\r\n/** @jsx jsx */\r\n\r\nconst LoginForm = ({ setTokenState, setIsUserLoggedIn, addAlert }) => {\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    setIsloading(true);\r\n    axios\r\n      .post(\"/users/login\", formState)\r\n      .then((res) => {\r\n        const {\r\n          data: { token },\r\n        } = res;\r\n        // console.log(\"aaaaaaaa\", token);\r\n        setIsloading(false);\r\n        setTokenState(token);\r\n        setIsUserLoggedIn(true);\r\n        setCookie(\"token\", token);\r\n      })\r\n      .catch((error) => {\r\n        setIsloading(false);\r\n        addAlert(\"danger\", \"unable to login\", 3000);\r\n        console.log(error);\r\n      });\r\n  };\r\n  const onChangeHandler = (event) => {\r\n    const {\r\n      target: { value, name },\r\n    } = event;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const initialState = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const [formState, setFormState] = useState(initialState);\r\n  const [isLoading, setIsloading] = useState(false);\r\n\r\n  // if (!isLoading) {\r\n  return (\r\n    <form css={formDefaultStyle} onSubmit={onSubmitHandler}>\r\n      {isLoading ? (\r\n        <LoadingDefault />\r\n      ) : (\r\n        <Fragment>\r\n          <InputSlider\r\n            // autoFocus={true}\r\n            id={\"loginEmail\"}\r\n            type={\"email\"}\r\n            name={\"email\"}\r\n            labelText={\"Your email\"}\r\n            value={formState.email}\r\n            onChange={onChangeHandler}\r\n            autoFocus={true}\r\n          />\r\n          <InputSlider\r\n            id={\"loginPassword\"}\r\n            type={\"password\"}\r\n            name={\"password\"}\r\n            labelText={\"Password\"}\r\n            value={formState.password}\r\n            onChange={onChangeHandler}\r\n          />\r\n          <FormButton btnText={\"login\"} />\r\n        </Fragment>\r\n      )}\r\n    </form>\r\n  );\r\n  // } else {\r\n  //   return <LoadingDefault />;\r\n  // }\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { Fragment } from \"react\";\r\nimport RegisterForm from \"../Forms/RegisterForm\";\r\nimport LoginForm from \"../Forms/LoginForm\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Login = ({\r\n  setIsUserLoggedIn,\r\n  setTokenState,\r\n  isUserLoggedIn,\r\n  addAlert,\r\n}) => {\r\n  if (isUserLoggedIn) {\r\n    return <Redirect to={\"/tanks\"} />;\r\n  } else {\r\n    return (\r\n      <Fragment>\r\n        <LoginForm\r\n          setIsUserLoggedIn={setIsUserLoggedIn}\r\n          setTokenState={setTokenState}\r\n          addAlert={addAlert}\r\n        />\r\n        <RegisterForm\r\n          setIsUserLoggedIn={setIsUserLoggedIn}\r\n          setTokenState={setTokenState}\r\n          addAlert={addAlert}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Login;\r\n","// Libs\r\nimport React, { useState, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n// Components\r\nimport InputSlider from \"../atoms/inputs/InputSlider\";\r\nimport FormButton from \"../atoms/buttons/FormButton\";\r\nimport CloseWindowButton from \"../atoms/buttons/CloseWindowButton\";\r\nimport ToggleFormButton from \"../atoms/buttons/ToggleFormButton\";\r\nimport LoadingDefault from \"../atoms/loadings/LoadingDefault\";\r\n// Utils\r\nimport { getAuthHeader } from \"../../utils/tokenUtils\";\r\n// Styles\r\nimport { barFormStyle, formWrapper } from \"./styles/barFormStyle\";\r\n\r\n/** @jsx jsx */\r\n\r\nconst AddTankForm = ({\r\n  tokenState,\r\n  setTanksListingState,\r\n  tanksListingState,\r\n  addAlert,\r\n}) => {\r\n  const [isLoading, setIsloading] = useState(false);\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    const authHeader = getAuthHeader(tokenState);\r\n    setIsloading(true);\r\n    axios\r\n      .post(\"/tanks\", formState, { headers: authHeader })\r\n      .then((res) => {\r\n        setIsloading(false);\r\n        setTanksListingState([...tanksListingState, res.data]);\r\n      })\r\n      .catch((error) => {\r\n        setIsloading(false);\r\n        addAlert(\r\n          \"danger\",\r\n          \"Ups. Unable to add tank. Check data and try again\",\r\n          3000\r\n        );\r\n        console.log(\"add alert fn:\", addAlert);\r\n        console.log(error);\r\n      });\r\n  };\r\n  const onChangeHandler = (event) => {\r\n    const {\r\n      target: { value, name },\r\n    } = event;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const initialState = {\r\n    name: \"\",\r\n    sizeX: \"\",\r\n    sizeY: \"\",\r\n    sizeZ: \"\",\r\n    aquariumType: \"\",\r\n  };\r\n\r\n  const [formState, setFormState] = useState(initialState);\r\n  const [isMobileFormToggled, setIsMobileFormToggled] = useState(false);\r\n\r\n  const toggleMobileFormHandler = (event) => {\r\n    event.preventDefault();\r\n    setIsMobileFormToggled(!isMobileFormToggled);\r\n  };\r\n  return (\r\n    <section css={formWrapper}>\r\n      <ToggleFormButton\r\n        buttonText=\"New tank\"\r\n        onClickHandler={toggleMobileFormHandler}\r\n      />\r\n\r\n      <form css={barFormStyle(isMobileFormToggled)} onSubmit={onSubmitHandler}>\r\n        {isLoading ? (\r\n          <LoadingDefault />\r\n        ) : (\r\n          <Fragment>\r\n            <CloseWindowButton onClickHandler={toggleMobileFormHandler} />\r\n            <InputSlider\r\n              id={\"tankName\"}\r\n              type={\"text\"}\r\n              name={\"name\"}\r\n              labelText={\"tank name\"}\r\n              value={formState.name}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <InputSlider\r\n              id={\"TankSizeX\"}\r\n              type={\"number\"}\r\n              name={\"sizeX\"}\r\n              labelText={\"tank size on X axis\"}\r\n              value={formState.sizeX}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <InputSlider\r\n              id={\"TankSizeY\"}\r\n              type={\"number\"}\r\n              name={\"sizeY\"}\r\n              labelText={\"tank size on Y axis\"}\r\n              value={formState.sizeY}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <InputSlider\r\n              id={\"TankSizeZ\"}\r\n              type={\"number\"}\r\n              name={\"sizeZ\"}\r\n              labelText={\"tank size on Z axis\"}\r\n              value={formState.sizeZ}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <InputSlider\r\n              id={\"tankAquariumType\"}\r\n              type={\"text\"}\r\n              name={\"aquariumType\"}\r\n              labelText={\"aquarium type\"}\r\n              value={formState.aquariumType}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <FormButton btnText=\"Add tank\" />{\" \"}\r\n          </Fragment>\r\n        )}\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AddTankForm;\r\n","import React from \"react\";\r\nimport { css, jsx } from \"@emotion/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/** @jsx jsx */\r\n\r\nconst tankCardStyle = css`\r\n  background-color: #fff;\r\n  border-radius: 16px;\r\n  list-style: none;\r\n  box-shadow: -1px 1px 21px 10px rgba(240, 243, 248, 1);\r\n  margin-bottom: 2rem;\r\n  & .card-header {\r\n    color: #7e84cc;\r\n  }\r\n`;\r\n\r\nconst linkStyle = css`\r\n  text-decoration: none;\r\n  padding: 2rem 4rem;\r\n  display: block;\r\n`;\r\n\r\nconst TankCard = ({ tankData }) => {\r\n  return (\r\n    <li className=\"tank-card\" css={tankCardStyle}>\r\n      <Link css={linkStyle} to={`/tanks/${tankData._id}`}>\r\n        <h3 className=\"card-header\">{tankData.name}</h3>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TankCard;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n// Components\r\nimport TankCard from \"../atoms/cards/TankCard\";\r\n\r\n/** @jsx jsx */\r\n\r\nconst tanksListingStyle = css`\r\n  /* padding: 2rem 4rem; */\r\n  /* background-color: #fff; */\r\n  /* border-radius: 0 0 16px 16px; */\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  & > .tank-card {\r\n    flex-basis: calc(50% - 2rem);\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst TanksListing = ({ tanksListingState }) => {\r\n  return (\r\n    <ul css={tanksListingStyle}>\r\n      {tanksListingState.map((tank) => (\r\n        <TankCard key={tank._id} tankData={tank} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TanksListing;\r\n","// Libs\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n// Components\r\nimport Dashboard from \"../Dashboard/Dashboard\";\r\nimport AddTankForm from \"../Forms/AddTankForm\";\r\nimport TankListing from \"../Listings/TanksListing\";\r\nimport LoadingDefault from \"../atoms/loadings/LoadingDefault\";\r\n// Utils\r\nimport { getAuthHeader } from \"../../utils/tokenUtils\";\r\n\r\nconst TanksHome = ({ isUserLoggedIn, tokenState, addAlert }) => {\r\n  const [tanksListingState, setTanksListingState] = useState([]);\r\n  const [isLoading, setIsloading] = useState(false);\r\n  const populateTanksListing = async (tokenState) => {\r\n    const authHeader = getAuthHeader(tokenState);\r\n    try {\r\n      setIsloading(true);\r\n      const { data } = await axios.get(\"/tanks\", { headers: authHeader });\r\n      setTanksListingState(data);\r\n      setIsloading(false);\r\n    } catch (error) {\r\n      setIsloading(false);\r\n      console.log(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    isUserLoggedIn && populateTanksListing();\r\n  }, [isUserLoggedIn, tokenState]);\r\n\r\n  if (isUserLoggedIn) {\r\n    return (\r\n      <Fragment>\r\n        <Dashboard>\r\n          <AddTankForm\r\n            tokenState={tokenState}\r\n            setTanksListingState={setTanksListingState}\r\n            tanksListingState={tanksListingState}\r\n            addAlert={addAlert}\r\n          />\r\n          {isLoading ? (\r\n            <LoadingDefault />\r\n          ) : (\r\n            <TankListing tanksListingState={tanksListingState} />\r\n          )}\r\n        </Dashboard>\r\n      </Fragment>\r\n    );\r\n  } else {\r\n    return <Redirect to={\"/\"} />;\r\n  }\r\n};\r\n\r\nexport default TanksHome;\r\n","import React, {Fragment} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst UserProfile = ({userAccountInfo, isUserLoggedIn}) => {\r\n\r\n    console.log('profile ingfo is:', userAccountInfo)\r\n   \r\n    if(isUserLoggedIn){\r\n         const {name, email, surname, age, date} = userAccountInfo;\r\n        return (\r\n            <Fragment>\r\n                <h2>Hello {name}</h2>\r\n                <p>Email: {email} </p>\r\n                <p>Name and surname: {name} {surname}</p>\r\n                <p>age: {age}</p>\r\n                <p>account created date: {date} </p>\r\n            </Fragment>\r\n        )\r\n    } else {\r\n        return <Redirect to={'/'} />\r\n    }\r\n\r\n}\r\n\r\nexport default UserProfile;","import React, {Fragment} from 'react';\r\n\r\nconst About = () => {\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>About alpha tank</h2>\r\n            <article>\r\n                <p>\r\n                    Alpha tanks is a application created in order to help aquarium owners manage their water test results.\r\n                </p>\r\n                <p>\r\n                    Current app version: pre-alpha\r\n                </p>\r\n            </article>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default About;","// Libraries\r\nimport React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// Utils\r\nimport {\r\n  getUserToken,\r\n  formatAuthorizationHeader,\r\n  formatBearerToken,\r\n} from \"../utils/tokenUtils\";\r\nimport { pipe, deepCopy } from \"../utils/generalUtils\";\r\n\r\nconst loginOnMount = async (\r\n  isUserLoggedIn: boolean,\r\n  tokenState: string | null,\r\n  setTokenState: Function,\r\n  setIsUserLoggedIn: Function,\r\n  setUserAccountInfo: Function\r\n) => {\r\n  const token = getUserToken(tokenState);\r\n  // console.log(\"token is:\", token);\r\n  if (!isUserLoggedIn && token) {\r\n    console.log(token);\r\n    const authHeader = pipe(\r\n      formatBearerToken,\r\n      formatAuthorizationHeader\r\n    )(token);\r\n    console.log(authHeader);\r\n    try {\r\n      const { data } = await axios.get(\"/users/me\", { headers: authHeader });\r\n      setTokenState(token);\r\n      setIsUserLoggedIn(true);\r\n      setUserAccountInfo(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n};\r\n\r\nconst useAutoLoginAttempt = (\r\n  isUserLoggedIn: boolean,\r\n  tokenState: string | null,\r\n  setTokenState: Function,\r\n  setIsUserLoggedIn: Function,\r\n  setUserAccountInfo: Function\r\n) => {\r\n  useEffect(() => {\r\n    loginOnMount(\r\n      isUserLoggedIn,\r\n      tokenState,\r\n      setTokenState,\r\n      setIsUserLoggedIn,\r\n      setUserAccountInfo\r\n    );\r\n  }, [isUserLoggedIn]);\r\n};\r\n\r\nexport default useAutoLoginAttempt;\r\n","import React, { useEffect, useRef } from \"react\";\r\n\r\nconst useAlerts = (\r\n  alerts: [{ id: string; text: string; type: string }],\r\n  removeAlert: Function\r\n) => {\r\n  const lastTimeout = useRef<any>(null);\r\n\r\n  useEffect(() => {\r\n    if (alerts.length > 0) {\r\n      console.log(alerts);\r\n      clearTimeout(lastTimeout.current);\r\n      const timeoutFn = setTimeout(() => {\r\n        const lastAlertId = alerts[alerts.length - 1].id;\r\n        removeAlert(lastAlertId);\r\n      }, 3000);\r\n      lastTimeout.current = timeoutFn;\r\n    }\r\n  }, [alerts]);\r\n};\r\n\r\nexport default useAlerts;\r\n","import { css, jsx } from \"@emotion/core\";\r\n\r\n/** @jsx jsx */\r\nconst globalStyles = css`\r\n  @import url(\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap\");\r\n  *,\r\n  *::after,\r\n  *::before {\r\n    box-sizing: border-box;\r\n  }\r\n  html {\r\n    font-size: 10px;\r\n  }\r\n  body {\r\n    font-family: \"Roboto\", sans-serif;\r\n    font-size: 16px;\r\n    background-color: #f0f3f8;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  ul,\r\n  li,\r\n  ol {\r\n    margin: 0;\r\n    padding-inline-start: 0;\r\n  }\r\n`;\r\n\r\nexport default globalStyles;\r\n","// Libs\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { Global } from \"@emotion/core\";\r\nimport ReactGa from \"react-ga\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n// Components\r\nimport MainContainer from \"./components/MainContainer/MainContainer\";\r\nimport Tank from \"./components/Pages/Tank\";\r\nimport Login from \"./components/Pages/Login\";\r\nimport TanksHome from \"./components/Pages/TanksHome\";\r\nimport UserProfile from \"./components/Pages/UserProfile\";\r\nimport About from \"./components/Pages/About\";\r\n\r\n// Custome hooks\r\nimport useAutoLoginAttempt from \"./hooks/useAutoLoginAttempt\";\r\nimport useAlerts from \"./hooks/useAlerts\";\r\n\r\n// Styles\r\nimport globalStyles from \"./globalStyles\";\r\n\r\nfunction App() {\r\n  const [tokenState, setTokenState] = useState<string | null>(null);\r\n  const [userAccountInfo, setUserAccountInfo] = useState({});\r\n  const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\r\n  const [alerts, setAlerts] = useState<any>([]);\r\n\r\n  useEffect(() => {\r\n    ReactGa.initialize(\"UA-172045582-1\");\r\n    ReactGa.pageview(window.location.pathname + window.location.search);\r\n  }, []);\r\n\r\n  const removeAlert = (id: any) => {\r\n    setAlerts([...alerts].filter((alert) => alert.id !== id));\r\n  };\r\n  useAlerts(alerts, removeAlert);\r\n\r\n  useAutoLoginAttempt(\r\n    isUserLoggedIn,\r\n    tokenState,\r\n    setTokenState,\r\n    setIsUserLoggedIn,\r\n    setUserAccountInfo\r\n  );\r\n\r\n  const addAlert = (alertType: any, alertText: any) => {\r\n    const id = uuidv4();\r\n    const updatedAlerts = [\r\n      ...alerts,\r\n      {\r\n        text: alertText,\r\n        type: alertType,\r\n        id: id,\r\n      },\r\n    ];\r\n    setAlerts(updatedAlerts);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Global styles={globalStyles} />\r\n      <Router>\r\n        <MainContainer\r\n          setIsUserLoggedIn={setIsUserLoggedIn}\r\n          setTokenState={setTokenState}\r\n          alerts={alerts}\r\n          removeAlert={removeAlert}\r\n        >\r\n          <Route\r\n            path=\"/\"\r\n            exact\r\n            render={() => (\r\n              <Login\r\n                isUserLoggedIn={isUserLoggedIn}\r\n                setIsUserLoggedIn={setIsUserLoggedIn}\r\n                setTokenState={setTokenState}\r\n                addAlert={addAlert}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/tanks\"\r\n            exact\r\n            render={() => (\r\n              <TanksHome\r\n                isUserLoggedIn={isUserLoggedIn}\r\n                tokenState={tokenState}\r\n                addAlert={addAlert}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/tanks/:tankID\"\r\n            exact\r\n            render={(props) => (\r\n              <Tank\r\n                {...props}\r\n                tokenState={tokenState}\r\n                isUserLoggedIn={isUserLoggedIn}\r\n                addAlert={addAlert}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/me\"\r\n            // exec\r\n            render={() => (\r\n              <UserProfile\r\n                userAccountInfo={userAccountInfo}\r\n                isUserLoggedIn={isUserLoggedIn}\r\n              />\r\n            )}\r\n          />\r\n          <Route path=\"/about\" exec component={About} />\r\n        </MainContainer>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App></App>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}