{"version":3,"sources":["utils/generalUtils.js","components/atoms/LogoutButton/LogoutButton.js","components/Header/Header.js","components/MainContainer/MainContainer.js","components/Listings/TestsListing.js","utils/tokenUtils.js","components/Forms/AddTestForm.js","components/Pages/Tank.js","components/atoms/inputs/InputSlider.js","components/atoms/buttons/FormButton.js","components/Forms/styles/formDefaultStyle.js","components/Forms/RegisterForm.js","components/Forms/LoginForm.js","components/Pages/Login.js","components/Forms/styles/barFormStyle.js","components/Forms/AddTankForm.js","components/atoms/cards/TankCard.js","components/Listings/TanksListing.js","components/Pages/TanksHome.js","components/Pages/UserProfile.js","components/Pages/About.js","App.js","index.js"],"names":["pipe","fns","x","reduce","v","f","setCookie","data","newCookieObj","document","cookie","length","JSON","parse","stringify","error","console","log","buttonStyle","css","LogoutButton","btnText","setIsUserLoggedIn","setTokenState","className","onClick","key","deleteFromCookie","headerStyle","navbarStyle","linkStyle","Header","to","mainContainerStyle","MainContainer","children","TestsListing","testsState","map","test","_id","dateOfTest","nh3","nh4","no3","ph","tempCelc","getAuthHeader","tokenState","getUserToken","formatBearerToken","formatAuthorizationHeader","bearerToken","Authorization","userToken","token","AddTestForm","tankID","setTestsState","useState","formState","setFormState","onSubmitHandler","event","a","preventDefault","authHeader","axios","post","headers","onChangeHandler","value","target","type","checked","name","onSubmit","onChange","Tank","match","params","tankState","setTankState","populateTankAndTestsInformation","get","tank","tests","useEffect","inputWrapperStyle","inputStyle","InputSlider","id","labelText","labelStyle","placeholder","htmlFor","FormButton","formDefaultStyle","RegisterForm","email","password","surname","age","then","res","LoginForm","Login","isUserLoggedIn","barFormStyle","AddTankForm","setTanksListingState","tanksListingState","sizeX","sizeY","sizeZ","aquariumType","catch","tankCardStyle","TankCard","tankData","tanksListingStyle","TanksListing","TanksHome","populateTanksListing","UserProfile","userAccountInfo","date","About","globalStyles","App","setUserAccountInfo","loginOnMount","styles","path","exact","render","component","exec","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2827fc5a.chunk.js","sourcesContent":["const pipe = (...fns) => (x) => fns.reduce((v, f) => f(v), x);\r\n\r\nconst setCookie = (data) => {\r\n    let newCookieObj = {};\r\n    try {\r\n        newCookieObj = document.cookie.length > 0 ? {...JSON.parse(document.cookie), ...data} : {...data};\r\n        document.cookie = JSON.stringify(newCookieObj);\r\n    } catch(error){\r\n        console.log('Error setting cookies')\r\n    }\r\n    return newCookieObj; \r\n}\r\n\r\nconst deleteFromCookie = (key) => {\r\n    const cookie = JSON.parse(document.cookie);\r\n\r\n    delete cookie[key];\r\n    console.log(cookie)\r\n    document.cookie = JSON.stringify(cookie)\r\n}\r\n\r\nexport {\r\n    pipe,\r\n    setCookie,\r\n    deleteFromCookie\r\n}","import React from \"react\";\r\nimport { deleteFromCookie } from \"../../../utils/generalUtils\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n\r\n/**@jsx jsx */\r\n\r\nconst buttonStyle = css`\r\n  background-color: rgba(0, 0, 0, 0);\r\n  border: 1px solid #7e84cc;\r\n  padding: 0.8rem 4rem;\r\n  border-radius: 16px;\r\n  color: #7e84cc;\r\n  cursor: pointer;\r\n  margin-left: auto;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nconst LogoutButton = ({ btnText, setIsUserLoggedIn, setTokenState }) => {\r\n  const onClickHandler = () => {\r\n    deleteFromCookie(\"token\");\r\n    setIsUserLoggedIn(false);\r\n    setTokenState(null);\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className=\"logout-button\"\r\n      css={buttonStyle}\r\n      onClick={onClickHandler}\r\n    >\r\n      {btnText}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LogoutButton;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n// Componets\r\nimport LogoutButton from \"../atoms/LogoutButton/LogoutButton\";\r\n\r\n/**@jsx jsx */\r\n\r\nconst headerStyle = css`\r\n  margin-top: 4rem;\r\n  margin-bottom: 4rem;\r\n`;\r\n\r\nconst navbarStyle = css`\r\n  background-color: #fff;\r\n  max-width: 1170px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  /* padding: 2rem; */\r\n  border-radius: 16px;\r\n  padding: 0 2rem;\r\n\r\n  & > ul {\r\n    list-style: none;\r\n    display: flex;\r\n    & > li:last-of-type {\r\n      margin-left: auto;\r\n    }\r\n  }\r\n\r\n  & .logout-button {\r\n    margin-top: 1.3rem;\r\n  }\r\n`;\r\n\r\nconst linkStyle = css`\r\n  font-weight: 700;\r\n  color: #7e84cc;\r\n  text-decoration: none;\r\n  padding: 2rem;\r\n  padding-bottom: 1.5rem;\r\n  display: block;\r\n  border-bottom: 5px solid #fff;\r\n  transition: all ease-in 0.3s;\r\n  &:hover {\r\n    border-bottom-color: #b0b3df;\r\n  }\r\n`;\r\n\r\nconst Header = ({ setIsUserLoggedIn, setTokenState }) => {\r\n  return (\r\n    <header css={headerStyle}>\r\n      <nav css={navbarStyle}>\r\n        <ul>\r\n          <li>\r\n            <Link css={linkStyle} to={\"/\"}>\r\n              home\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link css={linkStyle} to={\"/tanks\"}>\r\n              my tanks\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link css={linkStyle} to={\"/me\"}>\r\n              my profile\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <LogoutButton\r\n              btnText={\"Logout\"}\r\n              setIsUserLoggedIn={setIsUserLoggedIn}\r\n              setTokenState={setTokenState}\r\n            />\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Fragment } from \"react\";\r\nimport { css, jsx } from \"@emotion/core\";\r\nimport Header from \"../Header/Header\";\r\n\r\n/** @jsx jsx */\r\nconst mainContainerStyle = css`\r\n  max-width: 1170px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nconst MainContainer = ({ setIsUserLoggedIn, children, setTokenState }) => {\r\n  return (\r\n    <Fragment>\r\n      <Header\r\n        setIsUserLoggedIn={setIsUserLoggedIn}\r\n        setTokenState={setTokenState}\r\n      />\r\n      <main css={mainContainerStyle}>{children}</main>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MainContainer;\r\n","import React from 'react';\r\n\r\nconst TestsListing = ({testsState}) => {\r\n\r\n    return(\r\n            <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Date of test</th>\r\n                    <th>NH3</th>\r\n                    <th>NH4</th>\r\n                    <th>NO3</th>\r\n                    <th>PH</th>\r\n                    <th>temperature (celc)</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {testsState.map(test => <tr key={test._id}>\r\n                    <td>\r\n                        {test.dateOfTest}\r\n                    </td>\r\n                    <td>\r\n                        {test.nh3}\r\n                    </td>\r\n                    <td>\r\n                        {test.nh4}\r\n                    </td>\r\n                    <td>\r\n                        {test.no3}\r\n                    </td>\r\n                    <td>\r\n                        {test.ph}\r\n                    </td>\r\n                    <td>\r\n                        {test.tempCelc}\r\n                    </td>\r\n                </tr>)}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default TestsListing","import {pipe} from './generalUtils';\r\n\r\nconst getAuthHeader = (tokenState) => {\r\n    return pipe(getUserToken, formatBearerToken, formatAuthorizationHeader)(tokenState)\r\n}\r\n\r\nconst formatAuthorizationHeader = (bearerToken) => {\r\n    if(!bearerToken){\r\n        return null;\r\n    }\r\n    return {\r\n        Authorization: bearerToken\r\n    }\r\n}\r\n\r\nconst formatBearerToken = (userToken) => {\r\n    if(!userToken) {\r\n        return null;\r\n    }\r\n    const bearerToken = `Bearer ${userToken}`;\r\n    return bearerToken\r\n}\r\n\r\nconst getUserToken = (tokenState) => {\r\n    let userToken = null;\r\n    try {\r\n        userToken = tokenState ? tokenState : JSON.parse(document.cookie).token;\r\n    } catch(error){\r\n        console.log(error)\r\n    }\r\n    return userToken\r\n}\r\n\r\nexport {\r\n    getAuthHeader,\r\n    formatAuthorizationHeader,\r\n    formatBearerToken,\r\n    getUserToken\r\n};","// Libs\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n// Components\r\n// Utils\r\nimport { getAuthHeader } from \"../../utils/tokenUtils\";\r\n\r\nconst AddTestForm = ({ tokenState, tankID, setTestsState, testsState }) => {\r\n  const initialState = {\r\n    dateOfTest: \"\",\r\n    nh3: \"\",\r\n    nh4: \"\",\r\n    no3: \"\",\r\n    ph: \"\",\r\n    tempCelc: \"\",\r\n  };\r\n  const [formState, setFormState] = useState(initialState);\r\n\r\n  const onSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    const authHeader = getAuthHeader(tokenState);\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"/tests\",\r\n        { ...formState, tankID },\r\n        { headers: authHeader }\r\n      );\r\n      setTestsState([...testsState, data]);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const onChangeHandler = (event) => {\r\n    const value =\r\n      event.target.type === \"checkbox\"\r\n        ? event.target.checked\r\n        : event.target.value;\r\n    setFormState({ ...formState, [event.target.name]: value });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmitHandler}>\r\n      <input type=\"date\" name=\"dateOfTest\" onChange={onChangeHandler} />\r\n      <input type=\"number\" name=\"nh3\" onChange={onChangeHandler} />\r\n      <input type=\"number\" name=\"nh4\" onChange={onChangeHandler} />\r\n      <input type=\"number\" name=\"no3\" onChange={onChangeHandler} />\r\n      <input type=\"number\" name=\"ph\" onChange={onChangeHandler} />\r\n      <input type=\"number\" name=\"tempCelc\" onChange={onChangeHandler} />\r\n      <input type=\"submit\" value=\"add test\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTestForm;\r\n","import React, {Fragment ,useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport TestsListing from '../Listings/TestsListing';\r\nimport AddTestForm from '../Forms/AddTestForm';\r\nimport {getAuthHeader} from '../../utils/tokenUtils';\r\n\r\n\r\nconst Tank = ({tokenState,  match}) => {\r\n    const {params:{tankID}} = match;\r\n    const [tankState, setTankState] = useState([]);\r\n    const [testsState, setTestsState] = useState([]);\r\n\r\n    const populateTankAndTestsInformation = async (tokenState, tankID) => {\r\n        const authHeader = getAuthHeader(tokenState);\r\n        const {data:{tank, tests}} = await axios.get(`/tanks/${tankID}`, {headers: authHeader} )\r\n        console.log(tests)\r\n        setTankState(tank);\r\n        setTestsState(tests);\r\n    }\r\n\r\n    useEffect(()=> {\r\n        populateTankAndTestsInformation(tokenState, tankID)\r\n    }, [tokenState, tankID])\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>{tankState.name}</h2>\r\n            <AddTestForm tankID={tankID} tokenState={tokenState} testsState={testsState} setTestsState={setTestsState} />\r\n            <TestsListing testsState={testsState} />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Tank;","import React from \"react\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n/** @jsx jsx */\r\n\r\nconst inputWrapperStyle = css`\r\n  width: 100%;\r\n  position: relative;\r\n  display: block;\r\n`;\r\n\r\nconst inputStyle = css`\r\n  width: 100%;\r\n  padding: 0.8rem;\r\n  border: none;\r\n  border-bottom: 1px solid #92a2ae;\r\n  outline: none;\r\n  display: block;\r\n  &:focus {\r\n    border-bottom: 1px solid #5a95e6;\r\n  }\r\n`;\r\n\r\nconst InputSlider = ({ id, type, name, labelText, value, onChange }) => {\r\n  const labelStyle = css`\r\n    position: absolute;\r\n    left: 0.8rem;\r\n    top: 50%;\r\n    font-size: 1.6rem;\r\n    color: #92a2ae;\r\n    transform: translate(-10%, -170%) scale(0.8);\r\n\r\n    input:placeholder-shown + & {\r\n      transform: translate(0, -50%);\r\n    }\r\n    transition: all ease-in 0.3s;\r\n    pointer-events: none;\r\n  `;\r\n  return (\r\n    <div className=\"input-slider-wrapper\" css={inputWrapperStyle}>\r\n      <input\r\n        onChange={onChange}\r\n        css={inputStyle}\r\n        id={id}\r\n        type={type}\r\n        name={name}\r\n        value={value}\r\n        placeholder=\" \"\r\n      />\r\n      <label css={labelStyle} htmlFor={id}>\r\n        {labelText}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputSlider;\r\n","import React from \"react\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n\r\n/** @jsx jsx */\r\nconst buttonStyle = css`\r\n  background-color: #9da7b4;\r\n  border: none;\r\n  padding: 0.8rem;\r\n  border-radius: 2px;\r\n  cursor: pointer;\r\n  text-transform: uppercase;\r\n  color: #ffffff;\r\n  display: block;\r\n  width: 100%;\r\n`;\r\n\r\nconst FormButton = ({ btnText }) => {\r\n  return <button css={buttonStyle}>{btnText}</button>;\r\n};\r\n\r\nexport default FormButton;\r\n","import { css, jsx } from \"@emotion/core\";\r\nconst formDefaultStyle = css`\r\n  background-color: #fff;\r\n  padding: 4rem;\r\n  border-radius: 16px;\r\n  max-width: 58.5rem;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n\r\n  & > .input-slider-wrapper {\r\n    margin-bottom: 1.6rem;\r\n  }\r\n`;\r\n\r\nexport default formDefaultStyle;\r\n","// Libs\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n// Components\r\nimport InputSlider from \"../atoms/inputs/InputSlider\";\r\nimport FormButton from \"../atoms/buttons/FormButton\";\r\n// Utils\r\nimport { setCookie } from \"../../utils/generalUtils\";\r\n// Styles\r\nimport formDefaultStyle from \"./styles/formDefaultStyle\";\r\n\r\n/** @jsx jsx */\r\n\r\nconst RegisterForm = ({ setIsUserLoggedIn, setTokenState }) => {\r\n  const initialState = {\r\n    email: \"\",\r\n    password: \"\",\r\n    name: \"\",\r\n    surname: \"\",\r\n    age: \"\",\r\n  };\r\n  const [formState, setFormState] = useState(initialState);\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    axios.post(\"/users\", formState).then((res) => {\r\n      const {\r\n        data: { token },\r\n      } = res;\r\n      setIsUserLoggedIn(true);\r\n      setTokenState(token);\r\n      setCookie({ token });\r\n    });\r\n  };\r\n  const onChangeHandler = (event) => {\r\n    const value =\r\n      event.target.type === \"checkbox\"\r\n        ? event.target.checked\r\n        : event.target.value;\r\n    setFormState({\r\n      ...formState,\r\n      [event.target.name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form css={formDefaultStyle} onSubmit={onSubmitHandler}>\r\n      <InputSlider\r\n        id={\"registerEmail\"}\r\n        type={\"email\"}\r\n        name={\"email\"}\r\n        labelText={\"Your email\"}\r\n        value={formState.email}\r\n        onChange={onChangeHandler}\r\n      />\r\n      <InputSlider\r\n        id={\"registerPassword\"}\r\n        type={\"password\"}\r\n        name={\"password\"}\r\n        labelText={\"Password\"}\r\n        value={formState.password}\r\n        onChange={onChangeHandler}\r\n      />\r\n      <InputSlider\r\n        id={\"registerName\"}\r\n        type={\"text\"}\r\n        name={\"name\"}\r\n        labelText={\"Your name\"}\r\n        value={formState.name}\r\n        onChange={onChangeHandler}\r\n      />\r\n      <InputSlider\r\n        id={\"registerSurname\"}\r\n        type={\"text\"}\r\n        name={\"surname\"}\r\n        labelText={\"Your surname\"}\r\n        value={formState.surname}\r\n        onChange={onChangeHandler}\r\n      />\r\n      <InputSlider\r\n        id={\"registerAge\"}\r\n        type={\"number\"}\r\n        name={\"age\"}\r\n        labelText={\"Your age\"}\r\n        value={formState.age}\r\n        onChange={onChangeHandler}\r\n      />\r\n\r\n      <FormButton btnText=\"register\" />\r\n      {/* <input type=\"submit\" value=\"register\" /> */}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","// Libs\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n// Components\r\nimport InputSlider from \"../atoms/inputs/InputSlider\";\r\nimport FormButton from \"../atoms/buttons/FormButton\";\r\n// Utils\r\nimport { setCookie } from \"../../utils/generalUtils\";\r\n// Styles\r\nimport formDefaultStyle from \"./styles/formDefaultStyle\";\r\n\r\n/** @jsx jsx */\r\n\r\nconst LoginForm = ({ setTokenState, setIsUserLoggedIn }) => {\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    axios.post(\"/users/login\", formState).then((res) => {\r\n      const {\r\n        data: { token },\r\n      } = res;\r\n      setTokenState(token);\r\n      setIsUserLoggedIn(true);\r\n      setCookie({ token });\r\n    });\r\n  };\r\n  const onChangeHandler = (event) => {\r\n    const {\r\n      target: { value, name },\r\n    } = event;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const initialState = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const [formState, setFormState] = useState(initialState);\r\n\r\n  return (\r\n    <form css={formDefaultStyle} onSubmit={onSubmitHandler}>\r\n      <InputSlider\r\n        id={\"loginEmail\"}\r\n        type={\"email\"}\r\n        name={\"email\"}\r\n        labelText={\"Your email\"}\r\n        value={formState.email}\r\n        onChange={onChangeHandler}\r\n      />\r\n      <InputSlider\r\n        id={\"loginPassword\"}\r\n        type={\"password\"}\r\n        name={\"password\"}\r\n        labelText={\"Password\"}\r\n        value={formState.password}\r\n        onChange={onChangeHandler}\r\n      />\r\n      <FormButton btnText={\"login\"} />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { Fragment } from \"react\";\r\nimport RegisterForm from \"../Forms/RegisterForm\";\r\nimport LoginForm from \"../Forms/LoginForm\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Login = ({ setIsUserLoggedIn, setTokenState, isUserLoggedIn }) => {\r\n  if (isUserLoggedIn) {\r\n    return <Redirect to={\"/tanks\"} />;\r\n  } else {\r\n    return (\r\n      <Fragment>\r\n        <LoginForm\r\n          setIsUserLoggedIn={setIsUserLoggedIn}\r\n          setTokenState={setTokenState}\r\n        />\r\n        <RegisterForm\r\n          setIsUserLoggedIn={setIsUserLoggedIn}\r\n          setTokenState={setTokenState}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Login;\r\n","import { css, jsx } from \"@emotion/core\";\r\n\r\nconst barFormStyle = css`\r\n  background-color: #fff;\r\n  padding: 2rem 4rem;\r\n  border-radius: 16px;\r\n  display: flex;\r\n  margin-bottom: 4rem;\r\n  & > .input-slider-wrapper {\r\n    margin-right: 1.6rem;\r\n  }\r\n`;\r\n\r\nexport default barFormStyle;\r\n","// Libs\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n// Components\r\nimport InputSlider from \"../atoms/inputs/InputSlider\";\r\nimport FormButton from \"../atoms/buttons/FormButton\";\r\n// Utils\r\nimport { getAuthHeader } from \"../../utils/tokenUtils\";\r\n// Styles\r\nimport barFormStyle from \"./styles/barFormStyle\";\r\n\r\n/** @jsx jsx */\r\n\r\nconst AddTankForm = ({\r\n  tokenState,\r\n  setTanksListingState,\r\n  tanksListingState,\r\n}) => {\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    const authHeader = getAuthHeader(tokenState);\r\n    axios\r\n      .post(\"/tanks\", formState, { headers: authHeader })\r\n      .then((res) => {\r\n        setTanksListingState([...tanksListingState, res.data]);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const onChangeHandler = (event) => {\r\n    const {\r\n      target: { value, name },\r\n    } = event;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const initialState = {\r\n    name: \"\",\r\n    sizeX: \"\",\r\n    sizeY: \"\",\r\n    sizeZ: \"\",\r\n    aquariumType: \"\",\r\n  };\r\n\r\n  const [formState, setFormState] = useState(initialState);\r\n\r\n  return (\r\n    <form css={barFormStyle} onSubmit={onSubmitHandler}>\r\n      <InputSlider\r\n        id={\"tankName\"}\r\n        type={\"text\"}\r\n        name={\"name\"}\r\n        labelText={\"tank name\"}\r\n        value={formState.name}\r\n        onChange={onChangeHandler}\r\n      />\r\n      <InputSlider\r\n        id={\"TankSizeX\"}\r\n        type={\"number\"}\r\n        name={\"sizeX\"}\r\n        labelText={\"tank size on X axis\"}\r\n        value={formState.sizeX}\r\n        onChange={onChangeHandler}\r\n      />\r\n      <InputSlider\r\n        id={\"TankSizeY\"}\r\n        type={\"number\"}\r\n        name={\"sizeY\"}\r\n        labelText={\"tank size on Y axis\"}\r\n        value={formState.sizeY}\r\n        onChange={onChangeHandler}\r\n      />\r\n      <InputSlider\r\n        id={\"TankSizeZ\"}\r\n        type={\"number\"}\r\n        name={\"sizeZ\"}\r\n        labelText={\"tank size on Z axis\"}\r\n        value={formState.sizeZ}\r\n        onChange={onChangeHandler}\r\n      />\r\n      <InputSlider\r\n        id={\"tankAquariumType\"}\r\n        type={\"text\"}\r\n        name={\"aquariumType\"}\r\n        labelText={\"aquarium type\"}\r\n        value={formState.sizeZ}\r\n        onChange={onChangeHandler}\r\n      />\r\n\r\n      <FormButton btnText=\"Add tank\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTankForm;\r\n","import React from \"react\";\r\nimport { css, jsx } from \"@emotion/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/** @jsx jsx */\r\n\r\nconst tankCardStyle = css`\r\n  background-color: #fff;\r\n  border-radius: 16px;\r\n  list-style: none;\r\n  box-shadow: -1px 1px 21px 10px rgba(240, 243, 248, 1);\r\n  margin-bottom: 2rem;\r\n  & .card-header {\r\n    color: #7e84cc;\r\n  }\r\n`;\r\n\r\nconst linkStyle = css`\r\n  text-decoration: none;\r\n  padding: 2rem 4rem;\r\n  display: block;\r\n`;\r\n\r\nconst TankCard = ({ tankData }) => {\r\n  return (\r\n    <li className=\"tank-card\" css={tankCardStyle}>\r\n      <Link css={linkStyle} to={`/tanks/${tankData._id}`}>\r\n        <h3 className=\"card-header\">{tankData.name}</h3>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TankCard;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n// Components\r\nimport TankCard from \"../atoms/cards/TankCard\";\r\n\r\n/** @jsx jsx */\r\n\r\nconst tanksListingStyle = css`\r\n  padding: 2rem 4rem;\r\n  background-color: #fff;\r\n  border-radius: 16px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  & > .tank-card {\r\n    flex-basis: calc(50% - 2rem);\r\n  }\r\n`;\r\n\r\nconst TanksListing = ({ tanksListingState }) => {\r\n  return (\r\n    <ul css={tanksListingStyle}>\r\n      {tanksListingState.map((tank) => (\r\n        <TankCard key={tank._id} tankData={tank} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TanksListing;\r\n","// Libs\r\nimport React, {Fragment, useState, useEffect} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport axios from 'axios';\r\n// Components\r\nimport AddTankForm from '../Forms/AddTankForm';\r\nimport TankListing from '../Listings/TanksListing';\r\n// Utils\r\nimport { getAuthHeader} from '../../utils/tokenUtils';\r\n\r\n\r\nconst TanksHome = ({isUserLoggedIn, tokenState }) => {\r\n\r\n    const [tanksListingState, setTanksListingState] = useState([]);\r\n    const populateTanksListing = async (tokenState) => {\r\n        const authHeader = getAuthHeader(tokenState);\r\n        try {\r\n            const {data} = await axios.get('/tanks', {headers: authHeader});\r\n            setTanksListingState(data);\r\n        } catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n    useEffect(()=> {\r\n        isUserLoggedIn && populateTanksListing();\r\n    }, [isUserLoggedIn, tokenState])\r\n\r\n    if(isUserLoggedIn){\r\n        return (\r\n             <Fragment>\r\n                <AddTankForm tokenState={tokenState} setTanksListingState={setTanksListingState} tanksListingState={tanksListingState}/>\r\n                <TankListing tanksListingState={tanksListingState} />\r\n            </Fragment>\r\n        )\r\n    } else {\r\n       return  <Redirect to={'/'} />\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default TanksHome;","import React, {Fragment} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst UserProfile = ({userAccountInfo, isUserLoggedIn}) => {\r\n\r\n    console.log('profile ingfo is:', userAccountInfo)\r\n   \r\n    if(isUserLoggedIn){\r\n         const {name, email, surname, age, date} = userAccountInfo;\r\n        return (\r\n            <Fragment>\r\n                <h2>Hello {name}</h2>\r\n                <p>Email: {email} </p>\r\n                <p>Name and surname: {name} {surname}</p>\r\n                <p>age: {age}</p>\r\n                <p>account created date: {date} </p>\r\n            </Fragment>\r\n        )\r\n    } else {\r\n        return <Redirect to={'/'} />\r\n    }\r\n\r\n}\r\n\r\nexport default UserProfile;","import React, {Fragment} from 'react';\r\n\r\nconst About = () => {\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>About alpha tank</h2>\r\n            <article>\r\n                <p>\r\n                    Alpha tanks is a application created in order to help aquarium owners manage their water test results.\r\n                </p>\r\n                <p>\r\n                    Current app version: pre-alpha\r\n                </p>\r\n            </article>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default About;","// Libs\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Global, css, jsx } from \"@emotion/core\";\r\n\r\n// Components\r\nimport MainContainer from \"./components/MainContainer/MainContainer\";\r\nimport Tank from \"./components/Pages/Tank\";\r\nimport Login from \"./components/Pages/Login\";\r\nimport TanksHome from \"./components/Pages/TanksHome\";\r\nimport UserProfile from \"./components/Pages/UserProfile\";\r\nimport About from \"./components/Pages/About\";\r\n// Utils\r\nimport {\r\n  getUserToken,\r\n  formatAuthorizationHeader,\r\n  formatBearerToken,\r\n} from \"./utils/tokenUtils\";\r\nimport { pipe } from \"./utils/generalUtils\";\r\n\r\n/** @jsx jsx */\r\nconst globalStyles = css`\r\n  @import url(\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap\");\r\n  *,\r\n  *::after,\r\n  *::before {\r\n    box-sizing: border-box;\r\n  }\r\n  html {\r\n    font-size: 10px;\r\n  }\r\n  body {\r\n    font-family: \"Roboto\", sans-serif;\r\n    font-size: 16px;\r\n    background-color: #f0f3f8;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  ul,\r\n  li,\r\n  ol {\r\n    margin: 0;\r\n    padding-inline-start: 0;\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n  const [tokenState, setTokenState] = useState(null);\r\n  const [userAccountInfo, setUserAccountInfo] = useState({});\r\n  const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\r\n\r\n  const loginOnMount = async (isUserLoggedIn, tokenState) => {\r\n    const token = getUserToken(tokenState);\r\n    if (!isUserLoggedIn && token) {\r\n      const authHeader = pipe(\r\n        formatBearerToken,\r\n        formatAuthorizationHeader\r\n      )(token);\r\n      try {\r\n        const { data } = await axios.get(\"/users/me\", { headers: authHeader });\r\n        setTokenState(token);\r\n        setIsUserLoggedIn(true);\r\n        setUserAccountInfo(data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loginOnMount(isUserLoggedIn, tokenState);\r\n  }, [isUserLoggedIn]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Global styles={globalStyles} />\r\n      <Router>\r\n        <MainContainer\r\n          setIsUserLoggedIn={setIsUserLoggedIn}\r\n          setTokenState={setTokenState}\r\n        >\r\n          <Route\r\n            path=\"/\"\r\n            exact\r\n            render={() => (\r\n              <Login\r\n                isUserLoggedIn={isUserLoggedIn}\r\n                setIsUserLoggedIn={setIsUserLoggedIn}\r\n                tokenState={tokenState}\r\n                setTokenState={setTokenState}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/tanks\"\r\n            exact\r\n            render={() => (\r\n              <TanksHome\r\n                isUserLoggedIn={isUserLoggedIn}\r\n                tokenState={tokenState}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/tanks/:tankID\"\r\n            exact\r\n            component={Tank}\r\n            tokenState={tokenState}\r\n          />\r\n          <Route\r\n            path=\"/me\"\r\n            exec\r\n            render={() => (\r\n              <UserProfile\r\n                userAccountInfo={userAccountInfo}\r\n                isUserLoggedIn={isUserLoggedIn}\r\n                setIsUserLoggedIn={setIsUserLoggedIn}\r\n              />\r\n            )}\r\n          />\r\n          <Route path=\"/about\" exec component={About} />\r\n        </MainContainer>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}