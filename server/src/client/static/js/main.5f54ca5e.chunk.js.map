{"version":3,"sources":["utils/generalUtils.js","components/atoms/LogoutButton/LogoutButton.js","components/Header/Header.js","components/MainContainer/MainContainer.js","components/Dashboard/Dashboard.js","components/Listings/TestsListing.js","components/atoms/Inputs/InputSlider.js","components/atoms/Inputs/DatePicker.js","components/atoms/buttons/FormButton.js","utils/tokenUtils.js","components/Forms/styles/barFormStyle.js","components/Forms/AddTestForm.js","components/Pages/Tank.js","components/Forms/styles/formDefaultStyle.js","components/Forms/RegisterForm.js","components/Forms/LoginForm.js","components/Pages/Login.js","components/Forms/AddTankForm.js","components/atoms/cards/TankCard.js","components/Listings/TanksListing.js","components/Pages/TanksHome.js","components/Pages/UserProfile.js","components/Pages/About.js","App.js","index.js"],"names":["pipe","fns","x","reduce","v","f","setCookie","data","newCookieObj","document","cookie","length","JSON","parse","stringify","error","console","log","buttonStyle","css","LogoutButton","btnText","setIsUserLoggedIn","setTokenState","className","onClick","key","deleteFromCookie","headerStyle","linkStyle","toggleBtnStyle","Header","useState","isNavToggled","setIsNavToggled","navbarStyle","src","to","mainContainerStyle","MainContainer","children","dashboardStyle","Dashboard","tableStyle","TestsListing","testsState","map","test","_id","dateOfTest","nh3","nh4","no3","ph","tempCelc","inputWrapperStyle","inputStyle","labelStyle","isValueFilled","InputSlider","id","type","name","labelText","value","onChange","autoFocus","htmlFor","DatePicker","onChangeHandler","FormButton","getAuthHeader","tokenState","getUserToken","formatBearerToken","formatAuthorizationHeader","bearerToken","Authorization","userToken","token","barFormStyle","AddTestForm","tankID","setTestsState","formState","setFormState","onSubmitHandler","event","a","preventDefault","authHeader","axios","post","headers","target","checked","onSubmit","Tank","match","params","tankState","setTankState","populateTankAndTestsInformation","get","tank","tests","useEffect","formDefaultStyle","RegisterForm","email","password","surname","age","then","res","LoginForm","Login","isUserLoggedIn","AddTankForm","setTanksListingState","tanksListingState","sizeX","sizeY","sizeZ","aquariumType","catch","tankCardStyle","TankCard","tankData","tanksListingStyle","TanksListing","TanksHome","populateTanksListing","UserProfile","userAccountInfo","date","About","globalStyles","App","setUserAccountInfo","loginOnMount","styles","path","exact","render","component","exec","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5f54ca5e.chunk.js","sourcesContent":["const pipe = (...fns) => (x) => fns.reduce((v, f) => f(v), x);\r\n\r\nconst setCookie = (data) => {\r\n    let newCookieObj = {};\r\n    try {\r\n        newCookieObj = document.cookie.length > 0 ? {...JSON.parse(document.cookie), ...data} : {...data};\r\n        document.cookie = JSON.stringify(newCookieObj);\r\n    } catch(error){\r\n        console.log('Error setting cookies')\r\n    }\r\n    return newCookieObj; \r\n}\r\n\r\nconst deleteFromCookie = (key) => {\r\n    const cookie = JSON.parse(document.cookie);\r\n\r\n    delete cookie[key];\r\n    console.log(cookie)\r\n    document.cookie = JSON.stringify(cookie)\r\n}\r\n\r\nexport {\r\n    pipe,\r\n    setCookie,\r\n    deleteFromCookie\r\n}","import React from \"react\";\r\nimport { deleteFromCookie } from \"../../../utils/generalUtils\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n\r\n/**@jsx jsx */\r\n\r\nconst buttonStyle = css`\r\n  background-color: rgba(0, 0, 0, 0);\r\n  border: 1px solid #7e84cc;\r\n  padding: 0.8rem 4rem;\r\n  border-radius: 16px;\r\n  color: #7e84cc;\r\n  cursor: pointer;\r\n  margin-left: auto;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nconst LogoutButton = ({ btnText, setIsUserLoggedIn, setTokenState }) => {\r\n  const onClickHandler = () => {\r\n    deleteFromCookie(\"token\");\r\n    setIsUserLoggedIn(false);\r\n    setTokenState(null);\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className=\"logout-button\"\r\n      css={buttonStyle}\r\n      onClick={onClickHandler}\r\n    >\r\n      {btnText}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LogoutButton;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n// Componets\r\nimport LogoutButton from \"../atoms/LogoutButton/LogoutButton\";\r\n\r\n/**@jsx jsx */\r\n\r\nconst headerStyle = css`\r\n  margin-top: 4rem;\r\n  margin-bottom: 4rem;\r\n  @media screen and (max-width: 768px) {\r\n    margin-top: 0;\r\n  }\r\n`;\r\n\r\nconst linkStyle = css`\r\n  font-weight: 700;\r\n  color: #7e84cc;\r\n  text-decoration: none;\r\n  padding: 2rem;\r\n  padding-bottom: 1.5rem;\r\n  display: block;\r\n  border-bottom: 5px solid #fff;\r\n  transition: all ease-in 0.3s;\r\n  &:hover {\r\n    border-bottom-color: #b0b3df;\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: inline-block;\r\n  }\r\n`;\r\n\r\nconst toggleBtnStyle = css`\r\n  position: absolute;\r\n  top: 2rem;\r\n  right: 4rem;\r\n  height: 5rem;\r\n  width: 5rem;\r\n  font-size: 0;\r\n  color: rgba(0, 0, 0, 0);\r\n  display: none;\r\n  border-radius: 16px;\r\n  border: 1px solid #000;\r\n  background-color: #fff;\r\n  &:after {\r\n    position: absolute;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst Header = ({ setIsUserLoggedIn, setTokenState }) => {\r\n  const [isNavToggled, setIsNavToggled] = useState(false);\r\n  const onToggleHandler = () => {\r\n    setIsNavToggled(!isNavToggled);\r\n    console.log(isNavToggled);\r\n  };\r\n\r\n  const navbarStyle = css`\r\n    background-color: #fff;\r\n    max-width: 1170px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    border-radius: 16px;\r\n    padding: 0 2rem;\r\n\r\n    @media screen and (max-width: 768px) {\r\n      padding-top: 8rem;\r\n      /* background-color: rgba(0,0,0,0); */\r\n      background-color: ${isNavToggled ? \"#ffffff\" : \"rgba(0,0,0,0);\"};\r\n    }\r\n\r\n    & > ul {\r\n      list-style: none;\r\n      display: flex;\r\n      & > li:last-of-type {\r\n        margin-left: auto;\r\n      }\r\n      @media screen and (max-width: 768px) {\r\n        display: ${isNavToggled ? \"flex\" : \"none\"};\r\n        flex-direction: column;\r\n        padding: 2rem;\r\n        justify-content: right;\r\n\r\n        & > li {\r\n          display: inline-block;\r\n          text-align: right;\r\n        }\r\n      }\r\n    }\r\n\r\n    & .logout-button {\r\n      margin-top: 1.3rem;\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <header css={headerStyle}>\r\n      <nav css={navbarStyle}>\r\n        <button onClick={onToggleHandler} css={toggleBtnStyle}>\r\n          <img src=\"navbar/icons8-menu.svg\" />\r\n        </button>\r\n        <ul>\r\n          <li>\r\n            <Link css={linkStyle} to={\"/\"}>\r\n              home\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link css={linkStyle} to={\"/tanks\"}>\r\n              my tanks\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link css={linkStyle} to={\"/me\"}>\r\n              my profile\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <LogoutButton\r\n              btnText={\"Logout\"}\r\n              setIsUserLoggedIn={setIsUserLoggedIn}\r\n              setTokenState={setTokenState}\r\n            />\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Fragment } from \"react\";\r\nimport { css, jsx } from \"@emotion/core\";\r\nimport Header from \"../Header/Header\";\r\n\r\n/** @jsx jsx */\r\nconst mainContainerStyle = css`\r\n  max-width: 1170px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nconst MainContainer = ({ setIsUserLoggedIn, children, setTokenState }) => {\r\n  return (\r\n    <Fragment>\r\n      <Header\r\n        setIsUserLoggedIn={setIsUserLoggedIn}\r\n        setTokenState={setTokenState}\r\n      />\r\n      <main css={mainContainerStyle}>{children}</main>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MainContainer;\r\n","import React from \"react\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n\r\n/** @jsx jsx */\r\n\r\nconst dashboardStyle = css`\r\n  padding: 4rem 4rem;\r\n  background-color: #ffffff;\r\n  border-radius: 16px;\r\n`;\r\n\r\nconst Dashboard = ({ children }) => {\r\n  return <section css={dashboardStyle}>{children}</section>;\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n\r\n/** @jsx jsx */\r\n\r\nconst tableStyle = css`\r\n  /* display: block; */\r\n  font-size: 1.6rem;\r\n  text-align: left;\r\n  background-color: #fff;\r\n  /* padding: 2rem 4rem; */\r\n  border-collapse: collapse;\r\n  /* border-radius: 16px; */\r\n\r\n  & thead tr {\r\n    font-weight: 700;\r\n    color: #7e84cc;\r\n    border-bottom: 1px solid #b4b8e1;\r\n  }\r\n\r\n  th,\r\n  td {\r\n    padding: 1.6rem;\r\n    /* &:first-of-type {\r\n      padding: 0.8rem 0.8rem 0.8rem 0;\r\n    } */\r\n    &:nth-of-type(2n + 1) {\r\n      background-color: #f8f8fc;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TestsListing = ({ testsState }) => {\r\n  return (\r\n    <table css={tableStyle}>\r\n      <thead>\r\n        <tr>\r\n          <th>Date of test</th>\r\n          <th>NH3</th>\r\n          <th>NH4</th>\r\n          <th>NO3</th>\r\n          <th>PH</th>\r\n          <th>temperature (celc)</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {testsState.map((test) => (\r\n          <tr key={test._id}>\r\n            <td>{test.dateOfTest}</td>\r\n            <td>{test.nh3}</td>\r\n            <td>{test.nh4}</td>\r\n            <td>{test.no3}</td>\r\n            <td>{test.ph}</td>\r\n            <td>{test.tempCelc}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default TestsListing;\r\n","import React from \"react\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n/** @jsx jsx */\r\n\r\nconst inputWrapperStyle = css`\r\n  width: 100%;\r\n  position: relative;\r\n  display: block;\r\n`;\r\n\r\nconst inputStyle = css`\r\n  width: 100%;\r\n  padding: 0.8rem;\r\n  border: none;\r\n  border-bottom: 1px solid #92a2ae;\r\n  outline: none;\r\n  display: block;\r\n  &:focus {\r\n    border-bottom: 1px solid #5a95e6;\r\n  }\r\n`;\r\n\r\nconst labelStyle = ({ isValueFilled }) => css`\r\n  position: absolute;\r\n  left: 0.8rem;\r\n  top: 50%;\r\n  font-size: 1.6rem;\r\n  transform: ${isValueFilled\r\n    ? \"translate(-10%, -170%) scale(0.8)\"\r\n    : \"translate(0, -50%)\"};\r\n  color: #92a2ae;\r\n  input:focus + & {\r\n    transform: translate(-10%, -170%) scale(0.8);\r\n    color: #5a95e6;\r\n  }\r\n  transition: all ease-in 0.3s;\r\n  pointer-events: none;\r\n`;\r\n\r\nconst InputSlider = ({\r\n  id,\r\n  type,\r\n  name,\r\n  labelText,\r\n  value,\r\n  onChange,\r\n  autoFocus,\r\n}) => {\r\n  const isValueFilled = value.length > 0;\r\n\r\n  return (\r\n    <div className=\"input-slider-wrapper\" css={inputWrapperStyle}>\r\n      <input\r\n        onChange={onChange}\r\n        css={inputStyle}\r\n        id={id}\r\n        type={type}\r\n        name={name}\r\n        value={value}\r\n        autoFocus={autoFocus}\r\n      />\r\n      <label css={labelStyle({ isValueFilled })} htmlFor={id}>\r\n        {labelText}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputSlider;\r\n","import React from \"react\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n\r\n/** @jsx jsx */\r\nconst inputWrapperStyle = css`\r\n  min-width: 18rem;\r\n  position: relative;\r\n\r\n  & > label {\r\n    position: absolute;\r\n    left: 0.8rem;\r\n    top: 50%;\r\n    font-size: 1.6rem;\r\n    /* transform: translate(0, -50%); */\r\n    transform: translate(-16%, -170%) scale(0.8);\r\n    pointer-events: none;\r\n    color: #92a2ae;\r\n  }\r\n\r\n  & > input {\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    border: none;\r\n    border-bottom: 1px solid #92a2ae;\r\n    outline: none;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst DatePicker = ({ id, name, labelText, value, onChangeHandler }) => {\r\n  return (\r\n    <div\r\n      className=\"input-slider-wrapper--date\"\r\n      css={inputWrapperStyle}\r\n      className=\"inputWrapper\"\r\n    >\r\n      <input\r\n        id={id}\r\n        type=\"date\"\r\n        name={name}\r\n        onChange={onChangeHandler}\r\n        value={value}\r\n      />\r\n      <label htmlFor={id}>{labelText}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DatePicker;\r\n","import React from \"react\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n\r\n/** @jsx jsx */\r\nconst buttonStyle = css`\r\n  background-color: #9da7b4;\r\n  border: none;\r\n  padding: 0.8rem;\r\n  border-radius: 2px;\r\n  cursor: pointer;\r\n  text-transform: uppercase;\r\n  color: #ffffff;\r\n  display: block;\r\n  width: 100%;\r\n`;\r\n\r\nconst FormButton = ({ btnText, autoFocus }) => {\r\n  return (\r\n    <button autoFocus={autoFocus} css={buttonStyle}>\r\n      {btnText}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default FormButton;\r\n","import {pipe} from './generalUtils';\r\n\r\nconst getAuthHeader = (tokenState) => {\r\n    return pipe(getUserToken, formatBearerToken, formatAuthorizationHeader)(tokenState)\r\n}\r\n\r\nconst formatAuthorizationHeader = (bearerToken) => {\r\n    if(!bearerToken){\r\n        return null;\r\n    }\r\n    return {\r\n        Authorization: bearerToken\r\n    }\r\n}\r\n\r\nconst formatBearerToken = (userToken) => {\r\n    if(!userToken) {\r\n        return null;\r\n    }\r\n    const bearerToken = `Bearer ${userToken}`;\r\n    return bearerToken\r\n}\r\n\r\nconst getUserToken = (tokenState) => {\r\n    let userToken = null;\r\n    try {\r\n        userToken = tokenState ? tokenState : JSON.parse(document.cookie).token;\r\n    } catch(error){\r\n        console.log(error)\r\n    }\r\n    return userToken\r\n}\r\n\r\nexport {\r\n    getAuthHeader,\r\n    formatAuthorizationHeader,\r\n    formatBearerToken,\r\n    getUserToken\r\n};","import { css, jsx } from \"@emotion/core\";\r\n\r\nconst barFormStyle = css`\r\n  background-color: #fff;\r\n  /* padding: 2rem 4rem; */\r\n  /* border-radius: 16px 16px 0 0; */\r\n  display: flex;\r\n  margin-bottom: 4rem;\r\n  & > .inputWrapper {\r\n    margin-right: 1.6rem;\r\n  }\r\n\r\n  & > .input-slider-wrapper {\r\n    margin-right: 1.6rem;\r\n  }\r\n`;\r\n\r\nexport default barFormStyle;\r\n","// Libs\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n// Components\r\nimport InputSlider from \"../atoms/Inputs/InputSlider\";\r\nimport DatePicker from \"../atoms/Inputs/DatePicker\";\r\nimport FormButton from \"../atoms/buttons/FormButton\";\r\n// Utils\r\nimport { getAuthHeader } from \"../../utils/tokenUtils\";\r\n// Styles\r\nimport barFormStyle from \"./styles/barFormStyle\";\r\n\r\n/**@jsx jsx */\r\n\r\nconst AddTestForm = ({ tokenState, tankID, setTestsState, testsState }) => {\r\n  const initialState = {\r\n    dateOfTest: \"\",\r\n    nh3: \"\",\r\n    nh4: \"\",\r\n    no3: \"\",\r\n    ph: \"\",\r\n    tempCelc: \"\",\r\n  };\r\n  const [formState, setFormState] = useState(initialState);\r\n\r\n  const onSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    const authHeader = getAuthHeader(tokenState);\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"/tests\",\r\n        { ...formState, tankID },\r\n        { headers: authHeader }\r\n      );\r\n      setTestsState([...testsState, data]);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const onChangeHandler = (event) => {\r\n    const value =\r\n      event.target.type === \"checkbox\"\r\n        ? event.target.checked\r\n        : event.target.value;\r\n    setFormState({ ...formState, [event.target.name]: value });\r\n  };\r\n\r\n  return (\r\n    <form css={barFormStyle} onSubmit={onSubmitHandler}>\r\n      <DatePicker\r\n        id={\"testDate\"}\r\n        name={\"dateOfTest\"}\r\n        labelText={\"date of testing\"}\r\n        value={formState.dateOfTest}\r\n        onChangeHandler={onChangeHandler}\r\n      />\r\n      <InputSlider\r\n        id={\"testNH3\"}\r\n        type={\"number\"}\r\n        name={\"nh3\"}\r\n        labelText={\"NH3\"}\r\n        value={formState.nh3}\r\n        onChange={onChangeHandler}\r\n      />\r\n      <InputSlider\r\n        id={\"testNH4\"}\r\n        type={\"number\"}\r\n        name={\"nh4\"}\r\n        labelText={\"NH4\"}\r\n        value={formState.nh4}\r\n        onChange={onChangeHandler}\r\n      />\r\n      <InputSlider\r\n        id={\"testNO3\"}\r\n        type={\"number\"}\r\n        name={\"no3\"}\r\n        labelText={\"NO3\"}\r\n        value={formState.no3}\r\n        onChange={onChangeHandler}\r\n      />\r\n      <InputSlider\r\n        id={\"testPH\"}\r\n        type={\"number\"}\r\n        name={\"ph\"}\r\n        labelText={\"PH\"}\r\n        value={formState.ph}\r\n        onChange={onChangeHandler}\r\n      />\r\n      <InputSlider\r\n        id={\"tempCelc\"}\r\n        type={\"number\"}\r\n        name={\"tempCelc\"}\r\n        labelText={\"temperature C\"}\r\n        value={formState.tempCelc}\r\n        onChange={onChangeHandler}\r\n      />\r\n      <FormButton btnText={\"add test\"} />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTestForm;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n// Components\r\nimport Dashboard from \"../Dashboard/Dashboard\";\r\nimport TestsListing from \"../Listings/TestsListing\";\r\nimport AddTestForm from \"../Forms/AddTestForm\";\r\n// Utils\r\nimport { getAuthHeader } from \"../../utils/tokenUtils\";\r\n\r\nconst Tank = ({ tokenState, match }) => {\r\n  const {\r\n    params: { tankID },\r\n  } = match;\r\n  const [tankState, setTankState] = useState([]);\r\n  const [testsState, setTestsState] = useState([]);\r\n\r\n  const populateTankAndTestsInformation = async (tokenState, tankID) => {\r\n    const authHeader = getAuthHeader(tokenState);\r\n    const {\r\n      data: { tank, tests },\r\n    } = await axios.get(`/tanks/${tankID}`, { headers: authHeader });\r\n    console.log(tests);\r\n    setTankState(tank);\r\n    setTestsState(tests);\r\n  };\r\n\r\n  useEffect(() => {\r\n    populateTankAndTestsInformation(tokenState, tankID);\r\n  }, [tokenState, tankID]);\r\n\r\n  return (\r\n    <Dashboard>\r\n      <h2>{tankState.name}</h2>\r\n      <AddTestForm\r\n        tankID={tankID}\r\n        tokenState={tokenState}\r\n        testsState={testsState}\r\n        setTestsState={setTestsState}\r\n      />\r\n      <TestsListing testsState={testsState} />\r\n    </Dashboard>\r\n  );\r\n};\r\n\r\nexport default Tank;\r\n","import { css, jsx } from \"@emotion/core\";\r\nconst formDefaultStyle = css`\r\n  background-color: #fff;\r\n  padding: 4rem;\r\n  border-radius: 16px;\r\n  max-width: 58.5rem;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n\r\n  & > .input-slider-wrapper {\r\n    margin-bottom: 1.6rem;\r\n  }\r\n`;\r\n\r\nexport default formDefaultStyle;\r\n","// Libs\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n// Components\r\nimport InputSlider from \"../atoms/Inputs/InputSlider\";\r\nimport FormButton from \"../atoms/buttons/FormButton\";\r\n// Utils\r\nimport { setCookie } from \"../../utils/generalUtils\";\r\n// Styles\r\nimport formDefaultStyle from \"./styles/formDefaultStyle\";\r\n\r\n/** @jsx jsx */\r\n\r\nconst RegisterForm = ({ setIsUserLoggedIn, setTokenState }) => {\r\n  const initialState = {\r\n    email: \"\",\r\n    password: \"\",\r\n    name: \"\",\r\n    surname: \"\",\r\n    age: \"\",\r\n  };\r\n  const [formState, setFormState] = useState(initialState);\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    axios.post(\"/users\", formState).then((res) => {\r\n      const {\r\n        data: { token },\r\n      } = res;\r\n      setIsUserLoggedIn(true);\r\n      setTokenState(token);\r\n      setCookie({ token });\r\n    });\r\n  };\r\n  const onChangeHandler = (event) => {\r\n    const value =\r\n      event.target.type === \"checkbox\"\r\n        ? event.target.checked\r\n        : event.target.value;\r\n    setFormState({\r\n      ...formState,\r\n      [event.target.name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form css={formDefaultStyle} onSubmit={onSubmitHandler}>\r\n      <InputSlider\r\n        id={\"registerEmail\"}\r\n        type={\"email\"}\r\n        name={\"email\"}\r\n        labelText={\"Your email\"}\r\n        value={formState.email}\r\n        onChange={onChangeHandler}\r\n      />\r\n      <InputSlider\r\n        id={\"registerPassword\"}\r\n        type={\"password\"}\r\n        name={\"password\"}\r\n        labelText={\"Password\"}\r\n        value={formState.password}\r\n        onChange={onChangeHandler}\r\n      />\r\n      <InputSlider\r\n        id={\"registerName\"}\r\n        type={\"text\"}\r\n        name={\"name\"}\r\n        labelText={\"Your name\"}\r\n        value={formState.name}\r\n        onChange={onChangeHandler}\r\n      />\r\n      <InputSlider\r\n        id={\"registerSurname\"}\r\n        type={\"text\"}\r\n        name={\"surname\"}\r\n        labelText={\"Your surname\"}\r\n        value={formState.surname}\r\n        onChange={onChangeHandler}\r\n      />\r\n      <InputSlider\r\n        id={\"registerAge\"}\r\n        type={\"number\"}\r\n        name={\"age\"}\r\n        labelText={\"Your age\"}\r\n        value={formState.age}\r\n        onChange={onChangeHandler}\r\n      />\r\n\r\n      <FormButton btnText=\"register\" />\r\n      {/* <input type=\"submit\" value=\"register\" /> */}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","// Libs\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n// Components\r\nimport InputSlider from \"../atoms/Inputs/InputSlider\";\r\nimport FormButton from \"../atoms/buttons/FormButton\";\r\n// Utils\r\nimport { setCookie } from \"../../utils/generalUtils\";\r\n// Styles\r\nimport formDefaultStyle from \"./styles/formDefaultStyle\";\r\n\r\n/** @jsx jsx */\r\n\r\nconst LoginForm = ({ setTokenState, setIsUserLoggedIn }) => {\r\n  // useEffect(() => {\r\n  //   document.querySelector(\"form\").click();\r\n  // }, []);\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    axios.post(\"/users/login\", formState).then((res) => {\r\n      const {\r\n        data: { token },\r\n      } = res;\r\n      setTokenState(token);\r\n      setIsUserLoggedIn(true);\r\n      setCookie({ token });\r\n    });\r\n  };\r\n  const onChangeHandler = (event) => {\r\n    const {\r\n      target: { value, name },\r\n    } = event;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const initialState = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const [formState, setFormState] = useState(initialState);\r\n\r\n  return (\r\n    <form css={formDefaultStyle} onSubmit={onSubmitHandler}>\r\n      <InputSlider\r\n        // autoFocus={true}\r\n        id={\"loginEmail\"}\r\n        type={\"email\"}\r\n        name={\"email\"}\r\n        labelText={\"Your email\"}\r\n        value={formState.email}\r\n        onChange={onChangeHandler}\r\n        autoFocus={true}\r\n      />\r\n      <InputSlider\r\n        id={\"loginPassword\"}\r\n        type={\"password\"}\r\n        name={\"password\"}\r\n        labelText={\"Password\"}\r\n        value={formState.password}\r\n        onChange={onChangeHandler}\r\n      />\r\n      <FormButton btnText={\"login\"} />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { Fragment } from \"react\";\r\nimport RegisterForm from \"../Forms/RegisterForm\";\r\nimport LoginForm from \"../Forms/LoginForm\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Login = ({ setIsUserLoggedIn, setTokenState, isUserLoggedIn }) => {\r\n  if (isUserLoggedIn) {\r\n    return <Redirect to={\"/tanks\"} />;\r\n  } else {\r\n    return (\r\n      <Fragment>\r\n        <LoginForm\r\n          setIsUserLoggedIn={setIsUserLoggedIn}\r\n          setTokenState={setTokenState}\r\n        />\r\n        <RegisterForm\r\n          setIsUserLoggedIn={setIsUserLoggedIn}\r\n          setTokenState={setTokenState}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Login;\r\n","// Libs\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n// Components\r\nimport InputSlider from \"../atoms/Inputs/InputSlider\";\r\nimport FormButton from \"../atoms/buttons/FormButton\";\r\n// Utils\r\nimport { getAuthHeader } from \"../../utils/tokenUtils\";\r\n// Styles\r\nimport barFormStyle from \"./styles/barFormStyle\";\r\n\r\n/** @jsx jsx */\r\n\r\nconst AddTankForm = ({\r\n  tokenState,\r\n  setTanksListingState,\r\n  tanksListingState,\r\n}) => {\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    const authHeader = getAuthHeader(tokenState);\r\n    axios\r\n      .post(\"/tanks\", formState, { headers: authHeader })\r\n      .then((res) => {\r\n        setTanksListingState([...tanksListingState, res.data]);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const onChangeHandler = (event) => {\r\n    const {\r\n      target: { value, name },\r\n    } = event;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const initialState = {\r\n    name: \"\",\r\n    sizeX: \"\",\r\n    sizeY: \"\",\r\n    sizeZ: \"\",\r\n    aquariumType: \"\",\r\n  };\r\n\r\n  const [formState, setFormState] = useState(initialState);\r\n\r\n  return (\r\n    <form css={barFormStyle} onSubmit={onSubmitHandler}>\r\n      <InputSlider\r\n        id={\"tankName\"}\r\n        type={\"text\"}\r\n        name={\"name\"}\r\n        labelText={\"tank name\"}\r\n        value={formState.name}\r\n        onChange={onChangeHandler}\r\n      />\r\n      <InputSlider\r\n        id={\"TankSizeX\"}\r\n        type={\"number\"}\r\n        name={\"sizeX\"}\r\n        labelText={\"tank size on X axis\"}\r\n        value={formState.sizeX}\r\n        onChange={onChangeHandler}\r\n      />\r\n      <InputSlider\r\n        id={\"TankSizeY\"}\r\n        type={\"number\"}\r\n        name={\"sizeY\"}\r\n        labelText={\"tank size on Y axis\"}\r\n        value={formState.sizeY}\r\n        onChange={onChangeHandler}\r\n      />\r\n      <InputSlider\r\n        id={\"TankSizeZ\"}\r\n        type={\"number\"}\r\n        name={\"sizeZ\"}\r\n        labelText={\"tank size on Z axis\"}\r\n        value={formState.sizeZ}\r\n        onChange={onChangeHandler}\r\n      />\r\n      <InputSlider\r\n        id={\"tankAquariumType\"}\r\n        type={\"text\"}\r\n        name={\"aquariumType\"}\r\n        labelText={\"aquarium type\"}\r\n        value={formState.sizeZ}\r\n        onChange={onChangeHandler}\r\n      />\r\n\r\n      <FormButton btnText=\"Add tank\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTankForm;\r\n","import React from \"react\";\r\nimport { css, jsx } from \"@emotion/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/** @jsx jsx */\r\n\r\nconst tankCardStyle = css`\r\n  background-color: #fff;\r\n  border-radius: 16px;\r\n  list-style: none;\r\n  box-shadow: -1px 1px 21px 10px rgba(240, 243, 248, 1);\r\n  margin-bottom: 2rem;\r\n  & .card-header {\r\n    color: #7e84cc;\r\n  }\r\n`;\r\n\r\nconst linkStyle = css`\r\n  text-decoration: none;\r\n  padding: 2rem 4rem;\r\n  display: block;\r\n`;\r\n\r\nconst TankCard = ({ tankData }) => {\r\n  return (\r\n    <li className=\"tank-card\" css={tankCardStyle}>\r\n      <Link css={linkStyle} to={`/tanks/${tankData._id}`}>\r\n        <h3 className=\"card-header\">{tankData.name}</h3>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TankCard;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { css, jsx } from \"@emotion/core\";\r\n// Components\r\nimport TankCard from \"../atoms/cards/TankCard\";\r\n\r\n/** @jsx jsx */\r\n\r\nconst tanksListingStyle = css`\r\n  /* padding: 2rem 4rem; */\r\n  /* background-color: #fff; */\r\n  /* border-radius: 0 0 16px 16px; */\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  & > .tank-card {\r\n    flex-basis: calc(50% - 2rem);\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst TanksListing = ({ tanksListingState }) => {\r\n  return (\r\n    <ul css={tanksListingStyle}>\r\n      {tanksListingState.map((tank) => (\r\n        <TankCard key={tank._id} tankData={tank} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TanksListing;\r\n","// Libs\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n// Components\r\nimport Dashboard from \"../Dashboard/Dashboard\";\r\nimport AddTankForm from \"../Forms/AddTankForm\";\r\nimport TankListing from \"../Listings/TanksListing\";\r\n// Utils\r\nimport { getAuthHeader } from \"../../utils/tokenUtils\";\r\n\r\nconst TanksHome = ({ isUserLoggedIn, tokenState }) => {\r\n  const [tanksListingState, setTanksListingState] = useState([]);\r\n  const populateTanksListing = async (tokenState) => {\r\n    const authHeader = getAuthHeader(tokenState);\r\n    try {\r\n      const { data } = await axios.get(\"/tanks\", { headers: authHeader });\r\n      setTanksListingState(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    isUserLoggedIn && populateTanksListing();\r\n  }, [isUserLoggedIn, tokenState]);\r\n\r\n  if (isUserLoggedIn) {\r\n    return (\r\n      <Fragment>\r\n        <Dashboard>\r\n          <AddTankForm\r\n            tokenState={tokenState}\r\n            setTanksListingState={setTanksListingState}\r\n            tanksListingState={tanksListingState}\r\n          />\r\n          <TankListing tanksListingState={tanksListingState} />\r\n        </Dashboard>\r\n      </Fragment>\r\n    );\r\n  } else {\r\n    return <Redirect to={\"/\"} />;\r\n  }\r\n};\r\n\r\nexport default TanksHome;\r\n","import React, {Fragment} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst UserProfile = ({userAccountInfo, isUserLoggedIn}) => {\r\n\r\n    console.log('profile ingfo is:', userAccountInfo)\r\n   \r\n    if(isUserLoggedIn){\r\n         const {name, email, surname, age, date} = userAccountInfo;\r\n        return (\r\n            <Fragment>\r\n                <h2>Hello {name}</h2>\r\n                <p>Email: {email} </p>\r\n                <p>Name and surname: {name} {surname}</p>\r\n                <p>age: {age}</p>\r\n                <p>account created date: {date} </p>\r\n            </Fragment>\r\n        )\r\n    } else {\r\n        return <Redirect to={'/'} />\r\n    }\r\n\r\n}\r\n\r\nexport default UserProfile;","import React, {Fragment} from 'react';\r\n\r\nconst About = () => {\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>About alpha tank</h2>\r\n            <article>\r\n                <p>\r\n                    Alpha tanks is a application created in order to help aquarium owners manage their water test results.\r\n                </p>\r\n                <p>\r\n                    Current app version: pre-alpha\r\n                </p>\r\n            </article>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default About;","// Libs\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Global, css, jsx } from \"@emotion/core\";\r\n\r\n// Components\r\nimport MainContainer from \"./components/MainContainer/MainContainer\";\r\nimport Tank from \"./components/Pages/Tank\";\r\nimport Login from \"./components/Pages/Login\";\r\nimport TanksHome from \"./components/Pages/TanksHome\";\r\nimport UserProfile from \"./components/Pages/UserProfile\";\r\nimport About from \"./components/Pages/About\";\r\n// Utils\r\nimport {\r\n  getUserToken,\r\n  formatAuthorizationHeader,\r\n  formatBearerToken,\r\n} from \"./utils/tokenUtils\";\r\nimport { pipe } from \"./utils/generalUtils\";\r\n\r\n/** @jsx jsx */\r\nconst globalStyles = css`\r\n  @import url(\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap\");\r\n  *,\r\n  *::after,\r\n  *::before {\r\n    box-sizing: border-box;\r\n  }\r\n  html {\r\n    font-size: 10px;\r\n  }\r\n  body {\r\n    font-family: \"Roboto\", sans-serif;\r\n    font-size: 16px;\r\n    background-color: #f0f3f8;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  ul,\r\n  li,\r\n  ol {\r\n    margin: 0;\r\n    padding-inline-start: 0;\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n  const [tokenState, setTokenState] = useState(null);\r\n  const [userAccountInfo, setUserAccountInfo] = useState({});\r\n  const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\r\n\r\n  const loginOnMount = async (isUserLoggedIn, tokenState) => {\r\n    const token = getUserToken(tokenState);\r\n    if (!isUserLoggedIn && token) {\r\n      const authHeader = pipe(\r\n        formatBearerToken,\r\n        formatAuthorizationHeader\r\n      )(token);\r\n      try {\r\n        const { data } = await axios.get(\"/users/me\", { headers: authHeader });\r\n        setTokenState(token);\r\n        setIsUserLoggedIn(true);\r\n        setUserAccountInfo(data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loginOnMount(isUserLoggedIn, tokenState);\r\n  }, [isUserLoggedIn]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Global styles={globalStyles} />\r\n      <Router>\r\n        <MainContainer\r\n          setIsUserLoggedIn={setIsUserLoggedIn}\r\n          setTokenState={setTokenState}\r\n        >\r\n          <Route\r\n            path=\"/\"\r\n            exact\r\n            render={() => (\r\n              <Login\r\n                isUserLoggedIn={isUserLoggedIn}\r\n                setIsUserLoggedIn={setIsUserLoggedIn}\r\n                tokenState={tokenState}\r\n                setTokenState={setTokenState}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/tanks\"\r\n            exact\r\n            render={() => (\r\n              <TanksHome\r\n                isUserLoggedIn={isUserLoggedIn}\r\n                tokenState={tokenState}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/tanks/:tankID\"\r\n            exact\r\n            component={Tank}\r\n            tokenState={tokenState}\r\n          />\r\n          <Route\r\n            path=\"/me\"\r\n            exec\r\n            render={() => (\r\n              <UserProfile\r\n                userAccountInfo={userAccountInfo}\r\n                isUserLoggedIn={isUserLoggedIn}\r\n                setIsUserLoggedIn={setIsUserLoggedIn}\r\n              />\r\n            )}\r\n          />\r\n          <Route path=\"/about\" exec component={About} />\r\n        </MainContainer>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}